<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal on Personal Blog</title>
    <link>http://localhost:1313/blog/tags/terminal/</link>
    <description>Recent content in Terminal on Personal Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Apr 2012 20:58:48 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Solucionar problemas después de actualizar Gnome 3.4.1</title>
      <link>http://localhost:1313/blog/posts/solucionar-problemas-despues-de-actualizar-gnome-3-4-1/</link>
      <pubDate>Mon, 23 Apr 2012 20:58:48 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/solucionar-problemas-despues-de-actualizar-gnome-3-4-1/</guid>
      <description>&lt;p&gt;Hoy, como para que el lunes arranque con todo, actualicé Arch y después no pude ingresar más la sesión de Gnome3. Aparecía la PC con carita triste y me decía que iba a desactivar las extensiones, pero no soluciona nada. Y cómo se actualizaron muchas drivers, el kernel y gnome no sabía bien donde estaba el problema.&lt;/p&gt;

&lt;p&gt;Al parecer la nueva versión de Gnome (3.4.1) tiene como dependencia networkmanager y si no lo encuentra explota por todos lados, pueden verificar el archivo /var/logs/messages.log, deberían tener algo así:
[spoiler title=&amp;ldquo;messages.log&amp;rdquo; open=&amp;ldquo;0&amp;rdquo; style=&amp;ldquo;1&amp;rdquo;]
&lt;code&gt;[...]
Apr 23 17:26:56 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/gnome/SessionManager/Presence interface=org.freedesktop.DBus.Properties method=GetAll
Apr 23 17:26:56 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/gnome/SessionManager/Presence interface=org.freedesktop.DBus.Properties method=GetAll
Apr 23 17:26:59 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/freedesktop/DBus interface=org.freedesktop.DBus method=NameOwnerChanged
Apr 23 17:26:59 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/freedesktop/DBus interface=org.freedesktop.DBus method=NameOwnerChanged
Apr 23 17:28:24 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/gnome/SessionManager interface=org.gnome.SessionManager method=IsInhibited
Apr 23 17:28:24 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/gnome/SessionManager interface=org.gnome.SessionManager method=IsInhibited
Apr 23 17:29:24 localhost dbus[661]: [system] Activating service name=&#39;org.freedesktop.NetworkManager&#39; (using servicehelper)
Apr 23 17:29:24 localhost dbus[661]: [system] Activated service &#39;org.freedesktop.NetworkManager&#39; failed: Launch helper exited with unknown return code 1
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): Searching for 4194307 in 4194307,4194308
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): Watch 1 fired, idle time = 600053
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): GsmPresence: setting idle: 1
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): Using ConsoleKit for session tracking
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): Updating ConsoleKit idle status: 1
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/gnome/SessionManager interface=org.gnome.SessionManager method=IsInhibited
Apr 23 17:36:54 localhost gnome-session[13301]: DEBUG(+): GsmDBusClient: obj_path=/org/gnome/SessionManager interface=org.gnome.SessionManager method=IsInhibited
[...]&lt;/code&gt;[/spoiler]&lt;/p&gt;

&lt;p&gt;Si quieren verificar si el problema se da por esto, pueden correr el siguiente comando (Control + Alt + F1) e intentar entrar a la sesión (Control + Alt + F7/F8):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo /etc/rc.d/networkmanager start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para hacer el cambio permanente, agreguen &lt;strong&gt;networkmanager&lt;/strong&gt; a los DAEMONS del /etc.rc.conf&lt;/p&gt;

&lt;p&gt;Espero que les sirva, a mi me hizo renegar mucho, y es algo bastante simple de solucionar.&lt;/p&gt;

&lt;p&gt;Edit: Según la &lt;a href=&#34;https://wiki.archlinux.org/index.php/NetworkManager#Edit_daemons&#34;&gt;wiki de Arch&lt;/a&gt;, hay que sacar el daemon de network y poner el de networkmanager después de dbus&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Comando at, automatizar scripts sin usar crontab</title>
      <link>http://localhost:1313/blog/posts/comando-at-automatizar-scripts-sin-usar-crontab/</link>
      <pubDate>Mon, 23 Jan 2012 16:34:56 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/comando-at-automatizar-scripts-sin-usar-crontab/</guid>
      <description>&lt;p&gt;A diferencia de &lt;strong&gt;cron&lt;/strong&gt;, &lt;strong&gt;at&lt;/strong&gt; permite programar un comando/script para que sea ejecutado sólo una vez y no periodicamente.&lt;/p&gt;

&lt;p&gt;Antes que nada deben instalarlo, no suele venir en las distribuciones por defecto. Usen pacman, aptitude, yum o lo que sea, tiene que estar en los repositorios.
Una vez instalado, deben correr el servicio y por que no agregarlo en el /etc/rc.conf para que arranque solo. Si no hacen esto no van a correrse los scripts.&lt;/p&gt;

&lt;p&gt;Para utilizarlo tenemos varias alternativas, la primera es &lt;em&gt;especificarle la fecha y hora&lt;/em&gt;, luego escribir el script (es importante que una vez que terminemos, presionemos Control+D):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;at 10:31am Jan 23 
warning: commands will be executed using /bin/sh
at&amp;gt; yaourt -Syu      
at&amp;gt; (Control +D) &amp;lt;eot&amp;gt;
job 5 at Mon Jan 23 10:31:00 2012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;También acepta otros &lt;em&gt;formatos&lt;/em&gt; de fechas, por ejemplo, para ejecutar algo mañana a esta misma hora, sería&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;at now tomorrow
at&amp;gt; blah blah
at&amp;gt; meh
at&amp;gt; (Control +D) &amp;lt;eot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para mostrar los comandos que están en cola de ejecución, basta con hacer &lt;strong&gt;at -l&lt;/strong&gt; o &lt;strong&gt;atq&lt;/strong&gt;, esto nos traerá un id, la fecha/hora en la que se ejecuta y el usuario que lo creó.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;at -l
6   Mon Jan 23 11:41:00 2012 a xebuz
7   Wed Jan 25 00:01:00 2012 a xebuz
5   Mon Jan 23 10:31:00 2012 a xebuz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para cancelar o eliminar una tarea pendiente, se utiliza &lt;strong&gt;atrm&lt;/strong&gt; o &lt;strong&gt;at -r&lt;/strong&gt; o &lt;strong&gt;at -d&lt;/strong&gt; :P, seguida del id de la tarea (obtenida desde el comando anterior).
Por último, si quieren ver todo el contenido del script, con &lt;strong&gt;at -c &lt;em&gt;id&lt;/em&gt;&lt;/strong&gt; lo obtienen completo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Optimizar pacman y la instalación de aplicaciones en Arch Linux</title>
      <link>http://localhost:1313/blog/posts/tips-para-mejorar-la-instacion-de-aplicaciones-en-arch/</link>
      <pubDate>Wed, 28 Dec 2011 18:19:48 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/tips-para-mejorar-la-instacion-de-aplicaciones-en-arch/</guid>
      <description>&lt;p&gt;La idea del post es hacer un compilado de tips y aplicaciones que puedan llegar a servir para mejorar &lt;a href=&#34;https://wiki.archlinux.org/index.php/Pacman&#34;&gt;pacman&lt;/a&gt; y la instalación de aplicaciones en Arch Linux. Si, escribí lo mismo que en el título pero con más palabras.
Para el usuario que venga de otras distros, como Ubuntu, le puede resultar díficil no tener esa &amp;lsquo;cosa&amp;rsquo; llamada Centro de Software, pero con un poco de maña se puede potenciar muchisimo la instalación (además no van a escuchar nunca más de los PPA).&lt;/p&gt;

&lt;p&gt;Vamos suponiendo que saben como usar &lt;strong&gt;pacman&lt;/strong&gt;. Básicamente tenemos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;pacman -Ss wally&lt;/em&gt; para buscar aplicaciones&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;_pacman -S chucknorri_s para instalar&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;pacman -Syu&lt;/em&gt; para actualizar&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;pacman -Rnd cristina&lt;/em&gt; para eliminar algo&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[note color=&amp;ldquo;#cfcfcf&amp;rdquo;]Antes de empezar, la configuración está en &lt;strong&gt;/etc/pacman.conf **&amp;hellip; y lo primero que tienen que agregar es una línea que diga **ILoveCandy&lt;/strong&gt;.
Si ya la agregaron, pueden seguir con el post, si no lo hacen no merecen usar Arch Linux.[/note]&lt;/p&gt;

&lt;p&gt;Optimizar el cache y la base de datos, tienen que correr &lt;strong&gt;sudo pacman -Sc &amp;amp;&amp;amp; sudo pacman-optimize&lt;/strong&gt;, pueden ponerlo en cron, es más fácil que acordarselo; &lt;strong&gt;yapos&lt;/strong&gt; también suele ser una buena opción para esto.
Instalen &lt;strong&gt;pacman-color&lt;/strong&gt;, es eye-candy nunca viene mal. Eso si, deberían crear una &lt;a href=&#34;http://blog.jesusroldan.com/2011/09/02/tips-para-linux-alias-para-todos/&#34;&gt;alias&lt;/a&gt; pacman=&amp;lsquo;pacman-color&amp;rsquo; sino creanme que nunca lo van a usar.
&lt;strong&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Reflector&#34;&gt;Reflector&lt;/a&gt;&lt;/strong&gt; me lo recomendaron en un &lt;a href=&#34;http://blog.jesusroldan.com/2011/09/06/lentitud-en-la-instalacion-de-paquetes-con-pacman/&#34;&gt;post&lt;/a&gt; y está muy bueno, mantiene actualizado el mirrorlist
Se puede optimizar un poco el tamaño de los paquetes a descargar con &lt;strong&gt;xdelta3&lt;/strong&gt; (y activando UseDelta en la configuración de pacman), no es una locura, pero algo se logra.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Ni hablar de que tienen que instalar &lt;strong&gt;yaourt&lt;/strong&gt;, es básico en cualquier Arch Linux, la forma más fácil es agregar el repositorio, actualizar e instalarlo con pacman.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[archlinuxfr]
Server = http://repo.archlinux.fr/$arch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¿Qué hace? Funciona igual que pacman, pero también permite instalar paquetes del &lt;a href=&#34;https://aur.archlinux.org/&#34;&gt;AUR&lt;/a&gt;, que es basicamente la fucking gloria.&lt;/p&gt;

&lt;p&gt;Si se sienten como princesas del bosque de las hadas, también pueden probar algun GUI, de los que usé, creo que &lt;strong&gt;Wakka&lt;/strong&gt; - I see what you did there! - es el mejor (sin entrar en la categoría KDE que no la probé). Rápido y simple. Lo que además tiene de bueno es que las acciones que hacemos muestran el comando, entonces, con el tiempo, podemos ir perdiendo el miedo a la consola&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Moverse entre directorios como un ninja</title>
      <link>http://localhost:1313/blog/posts/tips-linuxeros-moverse-entre-directorios-como-un-ninja/</link>
      <pubDate>Wed, 28 Sep 2011 14:28:14 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/tips-linuxeros-moverse-entre-directorios-como-un-ninja/</guid>
      <description>&lt;p&gt;Seguramente &lt;strong&gt;cd&lt;/strong&gt; es uno de los comandos que más usamos, y también de los primeros que aprendemos a usar (junto con ls, rm, mkdir y esas cosas).
Es posible que no usen todo el potencial que tiene, tampoco es la locura, pero tiene algunos detalles con los que vamos a poder ahorrarnos tiempo y optimizar la navegación entre directorios, porque desde la consola todo es mejor y mas rápido :P&lt;/p&gt;

&lt;p&gt;El uso estandar sería: **cd directorio/ **&lt;/p&gt;

&lt;p&gt;Para ir al home del usuario, podemos hacer &lt;strong&gt;cd $HOME&lt;/strong&gt; o &lt;strong&gt;cd ~&lt;/strong&gt; o mucho mejor (porque ese símbolo nunca me sale) &lt;strong&gt;cd&lt;/strong&gt;, sin espacio.
Para ir al home de otro usuario, basta con &lt;strong&gt;cd ~marvin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Podemos volver posiciones hacia atrás e incluso seguir navegando a partir de esa posicion, por ejemplo, aca volvemos 2 niveles atras y etramos a otrodir: &lt;strong&gt;cd ../../otrodir/&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para volver al directorio previo (al directorio donde nos encontrabamos antes, no a un nivel anterior) hay que usar &lt;strong&gt;cd -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para crear un directorio y movernos al mismo: &lt;strong&gt;mkdir test &amp;amp;&amp;amp; cd $_&lt;/strong&gt; (pueden ponerlo en un &lt;a href=&#34;http://blog.jesusroldan.com/2011/09/02/tips-para-linux-alias-para-todos/&#34;&gt;alias&lt;/a&gt;, sería mas comódo)&lt;/p&gt;

&lt;p&gt;También existe una solución a la dislexia, los teclados duros, o la utilización de la consola apenas nos levantamos. Si corremos &lt;strong&gt;shopt -s cdspell&lt;/strong&gt; (o mejor aún. si lo agregamos al ~bashrc) nos corrige errores de tipeo, por ejemplo, si hacemos cd /hom/xebuz nos lleva a /home/xebuz, muy útil.&lt;/p&gt;

&lt;p&gt;Bueno, eso.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Versionar el directorio /etc con Git</title>
      <link>http://localhost:1313/blog/posts/versionar-el-directorio-etc-con-git/</link>
      <pubDate>Mon, 26 Sep 2011 17:23:59 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/versionar-el-directorio-etc-con-git/</guid>
      <description>&lt;p&gt;Una buena práctica, sobre todo si les gusta modificar los archivos de configuración para probar cosas o instalar aplicaciones constantemnte, es versionar el directorio /etc, para el caso en el que nos &lt;del&gt;mandemos alguna cagada&lt;/del&gt; equivoquemos en alguna configuración, el problema sea facilmente remediable.
La instalación y configuración es muy sencilla, en este caso es todo manual, si quieren saltearse todo e instalar directamente &lt;strong&gt;&lt;a href=&#34;http://kitenet.net/~joey/code/etckeeper/&#34;&gt;etckeeper&lt;/a&gt;&lt;/strong&gt; es válido igual ;)&lt;/p&gt;

&lt;p&gt;Antes que todo, hay que instalar &lt;strong&gt;git&lt;/strong&gt; (usé git porque&amp;hellip;si)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yaourt -S git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Después vamos al directorio correspondiente y creamos el repositorio:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /etc &amp;amp;&amp;amp; git init 
Initialized empty Git repository in /etc/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agregamos todos los archivos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add --all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hacemos nuestro primer commit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -m &amp;quot;Mira mama, estoy usando versionado&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pueden crear un nuevo brach, como para tener una copia inicial del directorio, solo basta hacer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch inicial
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para verificar cambios sin commitear, pueden usar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En crontab crear commits diarios, no se, esas cosas las manejan a gusto, prefiero hacerlo manual&amp;hellip;&lt;/p&gt;

&lt;p&gt;Pueden cambiar de branch con &amp;ldquo;git checkout &amp;ldquo;&amp;hellip;en fin, a partir de ahora los cambios que quieran hacer corren por su cuenta, esta es la configuración basica para que funcione. Mas información de git pueden encontrarla en &lt;a href=&#34;http://schacon.github.com/git/gittutorial.html&#34;&gt;http://schacon.github.com/git/gittutorial.html&lt;/a&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Para ver los cambios, puede usar algunas apps como:
&lt;strong&gt;SmartGit&lt;/strong&gt;
Bastante cómoda, y eso que está hecho en &lt;a href=&#34;http://gifninja.com/animatedgifs/250429/trollface.gif&#34;&gt;Java&lt;/a&gt;! :P
Aca les dejo una imagen de como se ve, por si les interesa
&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2011/09/Screenshot-14.png&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2011/09/Screenshot-14-300x197.png&#34; alt=&#34;SmartGit on pacman.conf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pero no conozco más herramientas con GUI, si usan alguna en particular bienvenida sea&amp;hellip;
[quote style=&amp;ldquo;1&amp;rdquo;]Si no te equivocas de vez en cuando, es que no lo intentas.&lt;/p&gt;

&lt;p&gt;_ Woody Allen_&lt;/p&gt;

&lt;p&gt;[/quote]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Brother is watching you. Monitorear usuarios en Linux.</title>
      <link>http://localhost:1313/blog/posts/big-brother-is-watching-you-monitorear-usuarios-en-linux/</link>
      <pubDate>Sun, 25 Sep 2011 16:18:50 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/big-brother-is-watching-you-monitorear-usuarios-en-linux/</guid>
      <description>&lt;p&gt;Mantener un sistema estable a veces requiere observar que estan haciendo los usuarios.
No significa que tengamos que ponernos la gorra del Partido y salir a perseguir a Emmanuel Goldstein, sino sólo controlar un poco los recursos, evitando picos altos que puedan provocarnos inestabilidad.
Acá les dejo un par de comandos o de aplicaciones que tienen este propósito, espero que alguna les sirva&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;who&lt;/strong&gt;
El más simple, devuelve una lista de usuarios loggeados, y la tty donde están.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;w&lt;/strong&gt;
Similar a who, pero en este caso da un poco mas de información (no demasiada). Lista usuario, tty, tiempo loggeado, carga del sistema general y del usuario y que esta haciendo en ese momento. Un comando rápido, fácil y útil.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;whowatch&lt;/strong&gt;
Una aplicación bastante útil, crea un árbol con los usuarios loggeados, y
Con_ control + k_ mandamos un SIGKILL, con c switcheamos entre &amp;ldquo;comando/nombre de aplicacion&amp;rdquo;, la &lt;em&gt;o&lt;/em&gt; nos muestra el owner.
Pueden bajarla desde aca &lt;a href=&#34;http://wizard.ae.krakow.pl/~mike/&#34;&gt;http://wizard.ae.krakow.pl/~mike/&lt;/a&gt; aunque segurmente esté el los repositorios de la distro que usen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;last&lt;/strong&gt; y &lt;strong&gt;lastlog&lt;/strong&gt;
Muestra el ultimo acceso de los usuarios, el segundo es el mas simple y cómodo para leer, lista los usuarios, tty, desde donde y fecha y hora del acceso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;psacct&lt;/strong&gt;
Este es un conjunto de aplicaciones, muy utiles (informacion detallada &lt;a href=&#34;http://generationip.com/documentation/system-documentation/113-howto-on-psacct-for-a-complete-monitoring-of-processus-and-users-activities-on-your-system&#34;&gt;aca&lt;/a&gt;), dentro de las cuales se encuentra:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;ac&lt;/em&gt;: Muestra informacion acerca de cuanto tiempo estuvo loggeado el usuario.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;lastcomm&lt;/em&gt;: Información sobre el ultimo comando ejecutado.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;sa&lt;/em&gt;: Informacion sumarizada con los datos del comando anterior.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;last y lastb&lt;/em&gt;: Funciona muy similar al comando nombrado anteriormente, pero el segundo muestra tambien accesos fallidos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Alias para Todos</title>
      <link>http://localhost:1313/blog/posts/tips-para-linux-alias-para-todos/</link>
      <pubDate>Fri, 02 Sep 2011 21:33:09 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/tips-para-linux-alias-para-todos/</guid>
      <description>&lt;p&gt;Los alias en Linux son shortcuts o &lt;em&gt;sinónimos&lt;/em&gt; que podemos emplear para ejecutar comandos en la terminal.
Son muy útiles para correr comandos largos o simplemente crear nombres mas amigables, para algún comando que nos resulte deficil de recordar o a los que usemos mas seguido.
Para crearlos debemos escribir en el archivo &lt;strong&gt;~.bashrc&lt;/strong&gt; para dejarlos disponibles al usuario, o en /etc/bash.bashrc para dejarlos disponibles en todo el sistema.&lt;/p&gt;

&lt;p&gt;Las sintaxis es muy sencilla: &lt;em&gt;alias nombre=&amp;lsquo;comando&amp;rsquo;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Algunos ejemplos&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Gestión rapida de paquetería
alias instalar=&#39;sudo apt-get install&#39;
alias clearcache=&#39;yaourt -Scc&#39;
alias update=&#39;emerge --update --deep&#39;

#Vaciado de archivos
alias empty=&#39;:&amp;gt; $1&#39;

#Copiado con barra de progreso, velocidad y estadísticas
alias copy=&#39;rsync -avz --stats --progress&#39;

#Compartir la carpeta, via HTTP (http://127.0.0.1:8000)
alias sharehttp=&#39;python -m SimpleHTTPServer&#39;

#Mostrar unidades montadas, en columnas
alias mountt=&#39;mount | column -t&#39;

#Mostrar top 10 deprocesos que consuman mas memoria
alias pstop=&#39;ps aux | sort -nk +4 | tail&#39;

#Buscar proceso
alias psx=&#39;ps aux | grep &#39;

#Me olvide de poner sudo en el comando anterior
alias grrrrrrr=&#39;sudo !!&#39;

#Listar los puertos abiertos
alias openports=&#39;netstat --all --numeric --programs --inet&#39;

# Tambien podemos modificar el prompt o la terminal
# Agregandole la hora
alias hora=&#39;export PS1=&amp;quot;${PS1%\$*}&amp;quot;&#39; t $ &#39;
# o mejor aun, poniendola en la parte superior
alias horasuperior=&#39;while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done &amp;amp;&#39;

#Alias con parametros (en realidad es una funcion)
#Crear un directorio y posicionarnos sobre el mismo
MKdir() { mkdir $1 &amp;amp;&amp;amp; cd $1 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Hacer los comandos &amp;ldquo;human-readeable&amp;rdquo; por defecto&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias ls=&#39;ls -h&#39;
alias du=&#39;du -h&#39;
alias df=-df -h&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Simplificar los parámetros&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias ls=&#39;ls -hF --color=always&#39;
alias lr=&#39;ls -hR&#39;                    # recursive ls
alias ll=&#39;ls -hl&#39;
alias la=&#39;ll -hA&#39;
alias lx=&#39;ll -hBX&#39;                   # sort by extension
alias lz=&#39;ll -hrS&#39;                   # sort by size
alias lt=&#39;ll -rt&#39;                    # sort by date
alias lm=&#39;la | more&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;También podemos crear alias que solo funcionen para usuarios con privilegios de root&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [ $UID -ne 0 ]; then
    alias scat=&#39;sudo cat&#39;
    alias svim=&#39;sudo vim&#39;
    alias root=&#39;sudo su&#39;
    alias reboot=&#39;sudo reboot&#39;
    alias halt=&#39;sudo halt&#39;
    alias netcfg=&#39;sudo netcfg2&#39;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- more --&gt;

&lt;p&gt;Si queren saber cuales son los comandos que más se utilizan en el sistema, como para ver si pueden agilizar creando alias mas cortos, pueden correr esto:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; history | awk &#39;{print $2}&#39; | awk &#39;BEGIN {FS=&amp;quot;|&amp;quot;}{print $1}&#39; | sort | uniq -c | sort -n | tail -n 20 | sort -nr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[quote style=&amp;ldquo;1&amp;rdquo;] See, you not only have to be a good coder to create a system like Linux, you have to be a sneaky bastard too ;-) [/quote]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Linus Torvalds&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Descargar desde la consola</title>
      <link>http://localhost:1313/blog/posts/descargar-desde-la-consola-en-linux-megupload-rapidshare-cuevana-wupload-fileserve-hotfile/</link>
      <pubDate>Fri, 19 Aug 2011 01:24:47 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/descargar-desde-la-consola-en-linux-megupload-rapidshare-cuevana-wupload-fileserve-hotfile/</guid>
      <description>&lt;nav&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#plowshare-http-code-google-com-p-plowshare:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://code.google.com/p/plowshare/&#34;&gt;plowshare&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#megaupload-dl-http-mundogeek-net-megaupload-dl-y-rapidshare-dl-http-mundogeek-net-rapidshare-dl:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://mundogeek.net/megaupload-dl/&#34;&gt;megaupload-dl&lt;/a&gt;&lt;/strong&gt; y &lt;strong&gt;&lt;a href=&#34;http://mundogeek.net/rapidshare-dl/&#34;&gt;rapidshare-dl&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#slimrat-http-code-google-com-p-slimrat:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://code.google.com/p/slimrat/&#34;&gt;slimrat&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cuevanalinks-http-packages-python-org-cuevanalinks:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://packages.python.org/CuevanaLinks/&#34;&gt;CuevanaLinks&lt;/a&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/nav&gt;

&lt;p&gt;Existen varias opciones para bajar desde Megaupload, Rapidshare, MediaFire, Hotfile, Wupload y otro servicios gratuitos de hosting de archivos&amp;hellip; Dentro de las principales opciones tenemos:&lt;/p&gt;

&lt;h6 id=&#34;plowshare-http-code-google-com-p-plowshare:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://code.google.com/p/plowshare/&#34;&gt;plowshare&lt;/a&gt;&lt;/strong&gt;&lt;/h6&gt;

&lt;p&gt;Una vez instalada, nos da 4 comandos: &lt;em&gt;plowdel, plowdown, plowlist, plowup&lt;/em&gt; pero la verdad es que termiamos usando sólo uno: plowdown, quizas 2, con plowup (uno descarga otro sube, si!)
Uso básico, para no hacerlo muy extenso::&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;-r&lt;/strong&gt; limita la velocidad, pongan el valor con k, m o g (&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;-c&lt;/strong&gt; verifica que los links esten activos (no descarga nada)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;-m&lt;/strong&gt; &lt;em&gt;file.txt&lt;/em&gt; va comentando en el archivo los links que descarga&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tienen el &amp;ldquo;man plowdown&amp;rdquo; mucho más detallado y con buenos ejemplos.&lt;/p&gt;

&lt;h6 id=&#34;megaupload-dl-http-mundogeek-net-megaupload-dl-y-rapidshare-dl-http-mundogeek-net-rapidshare-dl:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://mundogeek.net/megaupload-dl/&#34;&gt;megaupload-dl&lt;/a&gt;&lt;/strong&gt; y &lt;strong&gt;&lt;a href=&#34;http://mundogeek.net/rapidshare-dl/&#34;&gt;rapidshare-dl&lt;/a&gt;&lt;/strong&gt;&lt;/h6&gt;

&lt;p&gt;El uso es bastante simple, con parametros faciles: podemos ponerle el link o los links con espacio de por medio, un archivo de texto, o -c para pasarle lo que tengamos en el portapeles.&lt;/p&gt;

&lt;h6 id=&#34;slimrat-http-code-google-com-p-slimrat:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://code.google.com/p/slimrat/&#34;&gt;slimrat&lt;/a&gt;&lt;/strong&gt;&lt;/h6&gt;

&lt;p&gt;Bastante similar a las anteriores, escrita en Perl, de uso muy simple, le pueden pasar como parametro un link, o con -l una lista en un archivo de texto.
Se le puede pasar como parametro un . Particularmente me falló bastante, uso plowshare, pero es una opción más a tener en cuenta.
Una dependencia importante, a mi no me la pidió solo la sugirió, es &lt;em&gt;aview&lt;/em&gt;. Tambien está disponible la versión con GUI.&lt;/p&gt;

&lt;p&gt;Opciones con GUI: &lt;strong&gt;&lt;a href=&#34;http://pyload.org/&#34;&gt;pyLoad&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;http://jdownloader.org/download&#34;&gt;jDownloader&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;http://www.tucaneando.com/&#34;&gt;Tucan&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&#34;http://fatrat.dolezel.info/&#34;&gt;FatRat&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h6 id=&#34;cuevanalinks-http-packages-python-org-cuevanalinks:8d7172eff3e4dab9627e32bde8594950&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://packages.python.org/CuevanaLinks/&#34;&gt;CuevanaLinks&lt;/a&gt;&lt;/strong&gt;&lt;/h6&gt;

&lt;p&gt;Si! Cuevana! Para aquellos que prefieren bajar la peli antes que esperar a las 10 de la noche a que entren todos para intentar ver algo, que se caiga y putear ;)
Uso:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cuevanalinks [parametros] &amp;quot;nombre&amp;quot; [temporada x capitulos]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;-d&lt;/strong&gt; Descarga el archivo&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;-s&lt;/strong&gt; Descarga subtitulos. con -l pueden descargar en otro idioma&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;-m&lt;/strong&gt; &lt;em&gt;file.txt&lt;/em&gt; va comentando en el archivo los links que descarga&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;-r X&lt;/strong&gt; Limita la descarga a X Kilobytes&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Es muy practico para las series, pueden bajar toda la temporada con un solo comando, por ejemplo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cuevanalinks -s -d &amp;quot;The Office&amp;quot; S01
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En el &lt;a href=&#34;http://nqnwebs.com/blog/article/cuevanalinks-ahora-para-seres&#34;&gt;blog del autor&lt;/a&gt; pueden ver que tambien existen una versión QUI basada en QT&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;em&gt;Imagino que todos o la gran mayoría deben estar disponibles desde los repositorios de la distro que usen&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Borrar con &#39;Delete&#39; en Nautilus y Gnome3</title>
      <link>http://localhost:1313/blog/posts/borrar-con-delete-en-nautilus-con-gnome3/</link>
      <pubDate>Tue, 02 Aug 2011 15:13:02 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/borrar-con-delete-en-nautilus-con-gnome3/</guid>
      <description>&lt;p&gt;Titulo opcional: &lt;em&gt;Volvé Delete, no te fajo más&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Me es sumamente tedioso borrar archivos con Nautilus en Gnome3, porque por defecto utiliza Ctrl + Delete/Supr, pero por suerte se puede modificar facilmente&lt;/p&gt;

&lt;p&gt;Primero, hay que habilitar una opción en la configuración para permitir editar los shortcuts, se puede hacer desde gconf-editor o desde la terminal con gsettings&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gsettings set org.gnome.desktop.interface can-change-accels true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Después, desde Nautilus, seleccionen un archivo y vayan a menú. Con el cursor &lt;strong&gt;SOBRE&lt;/strong&gt; la acción que desean modificar presionen la/s tecla/s que quieran como nuevo shortcut. (y SOBRE quiere decir &amp;ldquo;No hagan click, madafackas&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;Cuando terminen deben volver la configuración original para evitar modificar accesos por error, solo cambian _true/false _ con gsettings&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Agregar aplicaciones al inicio de Gnome3</title>
      <link>http://localhost:1313/blog/posts/agregar-aplicaciones-al-inicio-de-gnome3/</link>
      <pubDate>Mon, 25 Jul 2011 22:32:56 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/agregar-aplicaciones-al-inicio-de-gnome3/</guid>
      <description>&lt;p&gt;Este procedimiento es bastante &amp;lsquo;rustico&amp;rsquo;, pero funciona. Es una de las cosas (de muchas, lo sé) en las que falla Gnome3: no hay una forma de gestionar que aplicaciones se lanzan al inicio de sesión o por lo menos no encontré forma de hacerlo.&lt;/p&gt;

&lt;p&gt;Para esto, deben crear un archivo (por cada aplicacion) en &lt;strong&gt;~/.config/autostart/&lt;/strong&gt; con extension .desktop.
Como ejemplo voy a usar &lt;a href=&#34;http://guake.org/&#34;&gt;Guake&lt;/a&gt; de la siguiente forma:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cat ~/.config/autostart/guake.desktop

[Desktop Entry]
  Type=Application
  Exec=/usr/bin/guake
  Hidden=false
  X-GNOME-Autostart-enabled=true
  Name=guake
  Comment=Guake
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- more --&gt;

&lt;p&gt;Pueden leer un poco mas al respecto &lt;a href=&#34;http://developer.gnome.org/autostart-spec/&#34;&gt; aca &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Posiblemente ya exista alguna aplicación que haga eso, pero no la encontré&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Manejo del historial</title>
      <link>http://localhost:1313/blog/posts/tips-para-linux-manejo-del-historial/</link>
      <pubDate>Fri, 22 Jul 2011 00:16:16 +0000</pubDate>
      
      <guid>http://localhost:1313/blog/posts/tips-para-linux-manejo-del-historial/</guid>
      <description>&lt;p&gt;Quizás una de las mejores funcionalidades en la terminal de Linux, o por lo menos una de las más productivas, es la capacidad de generar un historial de lo que ejecutamos.
Ahora bien, existen varias formas de recorrerlo. La más común y la que seguramente todos usan, es mediante las flechas arriba y abajo, muy util, pero también existen otras formas de hacerlo :)&lt;/p&gt;

&lt;p&gt;Podemos hacer una búsqueda utilizando &lt;strong&gt;Ctrl+R&lt;/strong&gt; y el texto que deseamos. La búsqueda es incremental, en caso de que la primera opción no es la que queremos, sólo basta volver a presionar &lt;strong&gt;Ctrl+R&lt;/strong&gt;. Si queremos hacer la búsqueda en orden inverso, basta utilizar &lt;strong&gt;Ctrl+I&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Otra opción muy interesante es volver a ejecutar el comando anterior con &lt;strong&gt;!!&lt;/strong&gt; (doble signo de admiración). Es genial si nos olvidamos de ejecutar algo con permisos de superuser:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; sudo !!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;También se puede utilizar el &lt;strong&gt;!foo&lt;/strong&gt; para repetir la última vez que usamos foo, o &lt;strong&gt;!?foo&lt;/strong&gt; para volver a ejecutar el ultimo comando &lt;em&gt;que contenga&lt;/em&gt; foo.&lt;/p&gt;

&lt;p&gt;En caso de que querramos &lt;em&gt;reemplazar&lt;/em&gt; parte del script ejectutado anteriormente, por ejemplo, abrimos un archivo con nano pero ahora queremos abrirlo con vi, podemos correr&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;^nano^vi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En caso de que necesitemos mostrar todos los comandos que contengan cierto termino basta con hacer un &lt;strong&gt;grep&lt;/strong&gt; de lo que devuelve el comando history:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; history | grep foo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El número de la izquierda es el orden del comando, podemos correr esa linea usando &lt;strong&gt;!numero&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Un detalle&amp;hellip;&lt;/em&gt;
Es posible que si usan múltipes instancias de la terminal (desde tty, gnome-terminal, guake, yakuke, etc), no se guarde el historial, para esto  basta con editar el archivo &lt;strong&gt;~/.bashrc&lt;/strong&gt; de esta forma:
[sourcecode language=&amp;ldquo;bash&amp;rdquo;]
 unset HISTFILESIZE
 HISTSIZE=5000 # cantidad de registros que quieran guardar
 PROMPT_COMMAND=&amp;ldquo;history -a&amp;rdquo;
 export HISTSIZE PROMPT_COMMAND
[/sourcecode]&lt;/p&gt;

&lt;p&gt;Y correr una vez el siguiente comando&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; shopt -s histappend
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>