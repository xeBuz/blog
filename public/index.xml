<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>title</title>
    <link>jesusroldan.com/</link>
    <description>Recent content on title</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 May 2014 13:34:35 +0000</lastBuildDate>
    <atom:link href="jesusroldan.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Close Tab en Firefox 31</title>
      <link>/jesusroldan.com/posts/no-close-tabs-firefox-31/</link>
      <pubDate>Wed, 14 May 2014 13:34:35 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/no-close-tabs-firefox-31/</guid>
      <description>&lt;p&gt;Practicamente desde que uso Mozilla Firefox le quito el ícono de cerrar a las solapas, me ahorra espacio y minimiza el riesgo de cerrar por error alguna.
En versiones anteriores a Firefox 31, desde &lt;strong&gt;about:config&lt;/strong&gt; se podía editar desde la siguiente opción:
&lt;code&gt;browser.tabs.closeButtons = 0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pero debido a cambios en las tabs, esto deja de tener validez, y a partir de la versión 31 la configuración UI se realiza desde:
&lt;code&gt;browser.uiCustomization.state&lt;/code&gt;
y no es un solo campo, sino que nos da un JSON mucho mas complejo
[spoiler title=&amp;ldquo;Configuración original - JSON&amp;rdquo; style=&amp;ldquo;fancy&amp;rdquo; icon=&amp;ldquo;chevron&amp;rdquo;]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;placements&amp;quot;: {
        &amp;quot;PanelUI-contents&amp;quot;: [&amp;quot;edit-controls&amp;quot;, &amp;quot;zoom-controls&amp;quot;, &amp;quot;new-window-button&amp;quot;, &amp;quot;privatebrowsing-button&amp;quot;, &amp;quot;save-page-button&amp;quot;, &amp;quot;print-button&amp;quot;, &amp;quot;history-panelmenu&amp;quot;, &amp;quot;fullscreen-button&amp;quot;, &amp;quot;find-button&amp;quot;, &amp;quot;preferences-button&amp;quot;, &amp;quot;add-ons-button&amp;quot;, &amp;quot;ecb-button&amp;quot;, &amp;quot;abp-toolbarbutton&amp;quot;, &amp;quot;tb-venkman-open&amp;quot;, &amp;quot;measureit_toolbar_button&amp;quot;, &amp;quot;sessionmanager-undo&amp;quot;, &amp;quot;sessionmanager-toolbar&amp;quot;],
        &amp;quot;GiT-addon-bar&amp;quot;: [&amp;quot;GiT-addon-bar-toggle-button&amp;quot;, &amp;quot;epubreader-catalog-button&amp;quot;, &amp;quot;useragentswitcher-button&amp;quot;, &amp;quot;colorzilla-navbar-button&amp;quot;, &amp;quot;awesome-screenshot-toolbarbutton&amp;quot;, &amp;quot;RIL_toolbar_button&amp;quot;, &amp;quot;feed-button&amp;quot;, &amp;quot;customizableui-special-spring51&amp;quot;, &amp;quot;widget:jid1-n85lxPv1NAWVTQ@jetpack-freeMemory&amp;quot;, &amp;quot;FoxyScrobblerToolbarButton&amp;quot;, &amp;quot;GiT-status-bar-container&amp;quot;],
        &amp;quot;web-developer-toolbar&amp;quot;: [&amp;quot;web-developer-disable-toolbar&amp;quot;, &amp;quot;web-developer-cookies-toolbar&amp;quot;, &amp;quot;web-developer-css-toolbar&amp;quot;, &amp;quot;web-developer-forms-toolbar&amp;quot;, &amp;quot;web-developer-images-toolbar&amp;quot;, &amp;quot;web-developer-information-toolbar&amp;quot;, &amp;quot;web-developer-miscellaneous-toolbar&amp;quot;, &amp;quot;web-developer-outline-toolbar&amp;quot;, &amp;quot;web-developer-resize-toolbar&amp;quot;, &amp;quot;web-developer-tools-toolbar&amp;quot;, &amp;quot;web-developer-view-source-toolbar&amp;quot;, &amp;quot;web-developer-options-toolbar&amp;quot;, &amp;quot;customizableui-special-spring1&amp;quot;, &amp;quot;web-developer-render-mode-statusbar&amp;quot;, &amp;quot;web-developer-css-statusbar&amp;quot;, &amp;quot;web-developer-javascript-statusbar&amp;quot;],
        &amp;quot;addon-bar&amp;quot;: [&amp;quot;addonbar-closebutton&amp;quot;, &amp;quot;status-bar&amp;quot;],
        &amp;quot;PersonalToolbar&amp;quot;: [&amp;quot;personal-bookmarks&amp;quot;],
        &amp;quot;nav-bar&amp;quot;: [&amp;quot;urlbar-container&amp;quot;, &amp;quot;search-container&amp;quot;, &amp;quot;webrtc-status-button&amp;quot;, &amp;quot;downloads-button&amp;quot;, &amp;quot;igc-toolbar-button&amp;quot;, &amp;quot;social-share-button&amp;quot;, &amp;quot;developer-button&amp;quot;, &amp;quot;widget:jid1-4P0kohSJxU1qGg@jetpack-browserAction0&amp;quot;],
        &amp;quot;TabsToolbar&amp;quot;: [&amp;quot;tabbrowser-tabs&amp;quot;, &amp;quot;new-tab-button&amp;quot;, &amp;quot;tabview-button&amp;quot;, &amp;quot;alltabs-button&amp;quot;, &amp;quot;tabs-closebutton&amp;quot;],
        &amp;quot;toolbar-menubar&amp;quot;: [&amp;quot;menubar-items&amp;quot;]
    },
    &amp;quot;seen&amp;quot;: [&amp;quot;abp-toolbarbutton&amp;quot;, &amp;quot;GiT-special-spring&amp;quot;, &amp;quot;GiT-special-spacer&amp;quot;, &amp;quot;GiT-special-separator&amp;quot;],
    &amp;quot;dirtyAreaCache&amp;quot;: [&amp;quot;PersonalToolbar&amp;quot;, &amp;quot;nav-bar&amp;quot;, &amp;quot;TabsToolbar&amp;quot;, &amp;quot;toolbar-menubar&amp;quot;, &amp;quot;PanelUI-contents&amp;quot;, &amp;quot;web-developer-toolbar&amp;quot;, &amp;quot;addon-bar&amp;quot;, &amp;quot;GiT-addon-bar&amp;quot;],
    &amp;quot;newElementCount&amp;quot;: 59
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[/spoiler]&lt;/p&gt;

&lt;p&gt;Para dejar de tener el botón, hay que quitar &lt;strong&gt;&amp;ldquo;tabs-closebutton&amp;rdquo;&lt;/strong&gt;, se aplican los cambios sin reiniciar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Just another sample post</title>
      <link>/jesusroldan.com/posts/newest/</link>
      <pubDate>Sat, 29 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/newest/</guid>
      <description>

&lt;h2 id=&#34;first-heading:912493bb798d2cf24137bef8b4adb6f6&#34;&gt;First Heading&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Accusamus, consequatur aspernatur omnis iste. Voluptates, id inventore ea natus ab sed amet ipsa ratione sunt dignissimos. Soluta illum aliquid repellendus recusandae.&lt;/p&gt;

&lt;h3 id=&#34;sub:912493bb798d2cf24137bef8b4adb6f6&#34;&gt;Sub&lt;/h3&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Optio, perferendis saepe voluptatem a nesciunt architecto voluptas deleniti dolor tempora quasi quidem odit rem fugit magnam minima quam dolores vel id?&lt;/p&gt;

&lt;h2 id=&#34;conclusion:912493bb798d2cf24137bef8b4adb6f6&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Corporis, numquam ipsa ad! Quasi, deleniti quae sint consequatur error corporis dicta inventore alias soluta dignissimos? Molestias, quia ab deserunt repellat ut.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Second Post</title>
      <link>/jesusroldan.com/posts/middle/</link>
      <pubDate>Fri, 28 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/middle/</guid>
      <description>

&lt;h2 id=&#34;sample-post-1:5d41645769bc0f1237f2300a661d7e18&#34;&gt;Sample Post 1&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;

&lt;h3 id=&#34;sub-heading:5d41645769bc0f1237f2300a661d7e18&#34;&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Est, non, ratione, molestiae illo optio quia sequi id fuga natus nihil ad architecto dolor alias ex sunt iste aperiam eius itaque.&lt;/p&gt;

&lt;h2 id=&#34;foo:5d41645769bc0f1237f2300a661d7e18&#34;&gt;foo&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo, neque, eveniet voluptate eos debitis illum qui nostrum eius maxime ratione assumenda suscipit impedit deserunt voluptatibus odio ducimus non. Ex, ratione.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>/jesusroldan.com/posts/oldest/</link>
      <pubDate>Thu, 27 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/oldest/</guid>
      <description>

&lt;h2 id=&#34;sample-post-1:5be75e971689338db5c820fd71089689&#34;&gt;Sample Post 1&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&lt;/p&gt;

&lt;h3 id=&#34;sub-heading:5be75e971689338db5c820fd71089689&#34;&gt;Sub-heading&lt;/h3&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Est, non, ratione, molestiae illo optio quia sequi id fuga natus nihil ad architecto dolor alias ex sunt iste aperiam eius itaque.&lt;/p&gt;

&lt;h2 id=&#34;foo:5be75e971689338db5c820fd71089689&#34;&gt;foo&lt;/h2&gt;

&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quo, neque, eveniet voluptate eos debitis illum qui nostrum eius maxime ratione assumenda suscipit impedit deserunt voluptatibus odio ducimus non. Ex, ratione.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Crazy little thing called Perl: Introducción al lenguaje</title>
      <link>/jesusroldan.com/posts/crazy-little-thing-called-perl/</link>
      <pubDate>Wed, 05 Mar 2014 15:04:21 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/crazy-little-thing-called-perl/</guid>
      <description>&lt;p&gt;Perl está disponible para múltimples plataformas, pueden descargarlo desde &lt;a href=&#34;http://www.perl.org/get.html&#34;&gt;acá&lt;/a&gt; o desde el sistema de paquetes que utilicen. Para verificar si tienen instalado perl, en la terminal escriban &lt;em&gt;perl -v&lt;/em&gt;, si hay salida ya lo tienen instalado.&lt;/p&gt;

&lt;p&gt;Para la instalación de librerías se utiliza &lt;a href=&#34;http://www.cpan.org/&#34;&gt;&lt;strong&gt;CPAN&lt;/strong&gt;&lt;/a&gt;, que es una colección de módulos libres para Perl. Pueden descargar este script o sino instalarlo desde los repositorios, por ejemplo, en un Linux basado en Debian basta correr:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aptitude install cpanminus
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez instalado, para instalar módulos deben correr desde la consola el siguiente comando (teniendo en cuenta que el nombre del módulo es case-sensitive):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cpan install Modulo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://www.tiraecol.net/modules/comic/cache/images/tiraecol-15.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;
Perl maneja tres tipos de variables:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Scalar&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Array&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hash&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Scalar&lt;/strong&gt;
Las variables escalares representan un valor simple. Los valores escalares pueden ser cadenas, enteros o números de coma flotante y se definen anteponiendo el signo &lt;strong&gt;$&lt;/strong&gt; al nombre de la variable.
No hay necesidad de pre-declarar sus tipos de variables , Perl los convertirá automáticamente entre ellos según sea necesario.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my $animal = &amp;quot;tortuga&amp;quot;;
my $answer = 42;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Array&lt;/strong&gt;
Las variables de tipo Array representan una lista de valores. Se declaran anteponiendo el signo &lt;strong&gt;@&lt;/strong&gt; al nombre de la variable&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my @animals = (&amp;quot;turtle&amp;quot;, &amp;quot;llama&amp;quot;, &amp;quot;cat&amp;quot;);
my @numbers = (23, 42, 69);
my @mixed   = (&amp;quot;whale&amp;quot;, 666, 1.23);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Los Arrays son indexados a cero. Se puede acceder a los valores de la siguiente manera:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print $animals[0];              # imprime &amp;quot;turtle&amp;quot;. Se utiliza $ porque es un valor scalar
print $animals[1];              # imprime &amp;quot;llama&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La variable especial $#nombrearray nos indica el índice del último elemento.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;print $#mixed;                # imprime 2
print $mixed[$#mixed];        # último elemento, imprime 1.23
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Si utilizamos @mixed en contexto escalar, obtendremos el tamaño de nuestro Array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$arrayLength = @mixed;
print $arraylength;            #imprime 3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para obtener múltiples valores de nuestro Array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@animals[0,1];           # Devuelve (&amp;quot;turtle&amp;quot;, &amp;quot;llama&amp;quot;), @ porque devuelve un array;
@animals[0..2];          # Devuelve (&amp;quot;turtle&amp;quot;, &amp;quot;llama&amp;quot;, &amp;quot;cat&amp;quot;);
@animals[1..$#animals];  # Devuelve todo excepto el primer elemento
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Hash&lt;/strong&gt;
Un hash representa un conjunto de pares clave / valor. En realidad hash son tipo de Arrays, con la excepción de que el índice puede ser un número o una cadena. Están precedidos por el signo &lt;strong&gt;%&lt;/strong&gt; de la siguiente manera:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my %fruta_color = (&amp;quot;manzana&amp;quot;, &amp;quot;rojo&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;amarillo&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Se pueden utilizar los espacios en blanco y el operador =&amp;gt; para dejarlo mas claro:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my %fruta_color = (
    manzana =&amp;gt; &amp;quot;red&amp;quot;,
    banana =&amp;gt; &amp;quot;amarillo&amp;quot;,
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para obtener un elemento del hash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$fruta_color{&amp;quot;manzana&amp;quot;}       # Devuelve &amp;quot;rojo&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Podemos obtener una lista con las claves o valores con las funciones predefinidas keys() y values():&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my @frutas = keys(%fruta_color);
my colores = values(%fruta_color);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Alcance de las variables&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En la sección anterior declaramos:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my $animal = &amp;quot;tortuga&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El modificador my no es necesario, también se puede usar:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$animal = &amp;quot;tortuga&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sin embargo, el uso anterior creará variables globales a través de su programa, que es mala práctica de programación. my crea variables con ámbito local. Las variables locales están disponibles en el ámbito del bloque (es decir, un grupo de estados rodeadas de llaves) en el que están definidos.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my $x = &amp;quot;foo&amp;quot;;
my $condicion = 1;
if ($condicion) {
    my $y = &amp;quot;bar&amp;quot;;
    print $x;           # imprime &amp;quot;foo&amp;quot;
    print $y;           # imprime &amp;quot;bar&amp;quot;
}
print $x;               # imprime &amp;quot;foo&amp;quot;
print $y;               # no imprime nada ; $y no está en ese scope
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Tabla de conversiones de tipos&lt;/strong&gt;
        &lt;table &gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            &amp;lt;tr &amp;gt;
                 (1,2,3) [1,2,3] {a=&amp;gt;x} (a=&amp;gt;1) &amp;quot;pepe&amp;quot;
            &amp;lt;/tr&amp;gt; 

         &amp;lt;tbody &amp;gt;
            &amp;lt;tr &amp;gt;
                Arity
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;td &gt;Lista
&lt;/td&gt;
&lt;td &gt;Scalar
&lt;/td&gt;
&lt;td &gt;Hash Ref.
&lt;/td&gt;
&lt;td &gt;Hash
&lt;/td&gt;
&lt;td &gt;Scalar
&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr &gt;
                    Elemento
&lt;td &gt;$x[0]
&lt;/td&gt;
&lt;td &gt;$x-&amp;gt;[1]
&lt;/td&gt;
&lt;td &gt;$x-&amp;gt;{a}
&lt;/td&gt;
&lt;td &gt;$x{a}
&lt;/td&gt;
&lt;td &gt;$x
&lt;/td&gt;&lt;br /&gt;
                &lt;/tr&gt;
                &lt;tr &gt;
                    Lista
&lt;td &gt;@x
&lt;/td&gt;
&lt;td &gt;@{$x}
&lt;/td&gt;
&lt;td &gt;%{$x}
&lt;/td&gt;
&lt;td &gt;%x
&lt;/td&gt;
&lt;td &gt;($x)
&lt;/td&gt;
                &lt;/tr&gt;&lt;br /&gt;
                &lt;tr &gt;
                    Hash
&lt;td &gt;-
&lt;/td&gt;
&lt;td &gt;-
&lt;/td&gt;
&lt;td &gt;%{$x}
&lt;/td&gt;
&lt;td &gt;%x
&lt;/td&gt;
&lt;td &gt;{e=&amp;gt; $x}
&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr &gt;
                    Ref.
&lt;td &gt;\@x
&lt;/td&gt;
&lt;td &gt;$x
&lt;/td&gt;
&lt;td &gt;$x
&lt;/td&gt;
&lt;td &gt;\%x
&lt;/td&gt;
&lt;td &gt;\$x
&lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr &gt;
                    Ref. Copia
&lt;td &gt;[@x]
&lt;/td&gt;
&lt;td &gt;[@{$x}]
&lt;/td&gt;
&lt;td &gt;{%{$x}}
&lt;/td&gt;
&lt;td &gt;{%x}
&lt;/td&gt;
&lt;td &gt;[$x]
&lt;/td&gt;
                &lt;/tr&gt;
             &lt;/tbody&gt;
        &lt;/table&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sintaxis básica&lt;/strong&gt;
&lt;strong&gt;if, elsif, else, unless&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# La sintaxis es muy similar a otros lenguajes
if ($var == 3) {
  do_magic();
}

# unless se usa para un if negativo
if (!$var) {
  do_magic();
}
unless ($var) {
  do_magic();
}

# Por supuesto también existe else
if ($var) {
    do_magic();
} else {
   do_another_magic();
}
# y se pueden anidar
if ($var) {
   do_magic();
} elsif ($another_var) {
   do_another_magic();
} else {
   do_something_else();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;while, do while, until&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;my $counter = 10;

while ($counter &amp;gt; 0) {
   say $counter;
   $counter -= 1;
}

do {
  say $counter;
  $counter += 1;
} while ($counter &amp;lt; 10);


until( $counter &amp;gt; 20 ){
   say &amp;quot;$counter&amp;quot;;
   $counter += 1;
}

say &#39;tadaaa&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;for, for each&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# for ( init; condition; increment )
for( $i = 1; $i &amp;lt; 20; $i = $i + 1 ){
    print &amp;quot;value: $i\n&amp;quot;;
}

my @list = (1, 20, 33, 45, 59);
foreach $i (@list){
    say &#39;$i&#39;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Funciones&lt;/strong&gt;
En realidad las funciones son subrutinas, quizás sea porque el lenguaje es viejo :P &amp;hellip; la sintáxis es también bastante común.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sub name{
   # blablabla
   return $x;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para pasar parámetros se hace de esta forma&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sub TestScalar{
   my $x = @_;      #parámetro scalar 
   # blabla
}
sub TestArray{
   my @list = @_;   #parámetro array
   # blabla
}
sub TestHash {
   my (%hash) = @_; #parámetro hash
   # blabla
}

# Si esperamos varios parámetros, se pueden acceder desde la variable @_ como un array
sub TestScalar{
   my $x = @_[0]; 
   my $y = @_[1]; 
   # blabla
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**Variables privadas **&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sub TestPrivateVars{
   my $var; # inaccesible fuera de TestPrivateVars()
   $varx;   # accesible fuera de TestPrivateVars(), no hacerlo

   my ($another, @my_array, %my_hash); # declaración múltiple privada
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;TDD con Perl&lt;/strong&gt;
&lt;img src=&#34;http://www.aaroncohen.me/wp-content/uploads/2013/04/2011-04-28.tdd_-700x299.png&#34; alt=&#34;TDD&#34; /&gt;
Para hacer TDD en necesario bajar un paquete de CPAN, Test::More.
Acá un ejemplo de como correr un test, sobre una función específica.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# En esta línea declaramos el uso de Test::More
# y le decimos que solo se corre una vez
use Test::More test =&amp;gt; 1;

# is() es la función que ejecuta el test, consta de 3 parámetros
# 1ro función a ejecutar con sus respectivos parámetros
# 2do resultado esperado
# 3ro nombre descriptivo
is(replace(&amp;quot;hola&amp;quot;), &amp;quot;chau&amp;quot;, &amp;quot;Reemplazo de nombres&amp;quot;);
is(replace(&amp;quot;chay&amp;quot;), &amp;quot;chau&amp;quot;, &amp;quot;Reemplazo de nombres&amp;quot;);

# Esta es la función que se ejecuta
sub replace( my ($text) = @_;
    $text =~ s/\bhola\b/chau/gi;
    return $text;
}

#Con esta función declaramos el fin del testing
done_testing()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Próximo post: Expresiones regulares en Perl. O sea: Perl.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bundles de juegos, varias opciones disponibles</title>
      <link>/jesusroldan.com/posts/bundles-de-juegos-varias-opciones-disponibles/</link>
      <pubDate>Thu, 27 Feb 2014 16:30:20 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/bundles-de-juegos-varias-opciones-disponibles/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://humblebundle.com/&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Humble-Bundle-500x123.png&#34; alt=&#34;Humble Bundle&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;The Humble Bundle&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://humblebundle.com/&#34;&gt;http://humblebundle.com/&lt;/a&gt;&lt;/em&gt;
Por lejos el más conocido de todos, no hace falta que explique como funciona :D&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.bundlestars.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/bundlestars2.png&#34; alt=&#34;bundlestars2&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Bundle Star&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://bundlestars.com&#34;&gt;bundlestars.com&lt;/a&gt;&lt;/em&gt;
Este sitio está bueno por varios motivos. Primero tiene una buena cantidad de bundles, suele tener entre 8-10 al mismo tiempo, todos muy diferentes y suelen ser con alguna temática o tipo de juego similar, no es tan aleatorio como otros. Rondan entre los 3 y 5 USD.
Por otro lado, también tiene un Store de juegos individuales y DLCs, con descuentos entre 35% y 70%.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.indiegala.com/&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Indie-Gala.png&#34; alt=&#34;Indie Gala&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;The Indie Gala&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://www.indiegala.com/&#34;&gt;www.indiegala.com&lt;/a&gt;&lt;/em&gt;
Sistema parecido al de Humble Bundle, con unos juegos desbloqueables a 1 USD, las primeras 12 horas del bundle se paga 3.99 USD para desbloquear los juegos, después 5.99 USD. También tiene 2 juegos que se muestran más adelante, para los que pagaron el precio del desbloqueo. Dato a tener en cuenta, algunas keys son para Desura.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://groupees.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Groupees-500x139.png&#34; alt=&#34;Groupees&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Groupees&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://groupees.com&#34;&gt;groupees.com&lt;/a&gt;&lt;/em&gt;
Este tiene un sistema raro. Te da 8 juegos para elegir y te regala 3 más, de esos 8 podés elegir entra 4 y 8. Te sugiere un valor aproximado para pagar pero podés optar por 2 USD como mínimo. Además tenés la opción de donar 20% a &lt;a href=&#34;http://www.fotas.org/&#34;&gt;Friends of the Animal Shelter&lt;/a&gt; y bundles que no son de juegos (epbus, comics, etc)
Venden juegos que salen de Steam Greenlight, es una buena forma de apoyar desarrolladores indie.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.blinkbundle.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/blink-bundle.gif&#34; alt=&#34;blink bundle&#34; /&gt;&lt;/a&gt; &lt;a href=&#34;http://www.blinkbundle.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/blink-bundle.jpg&#34; alt=&#34;blink-bundle&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Blink Bundle&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://www.blinkbundle.com&#34;&gt;blinkbundle.com&lt;/a&gt;&lt;/em&gt;
Un piso de 1.99 USD para 4 juegos, el resto se desbloquean con 4.99 y tiene un juego extra bonus. Todos para Windows, Linux, Mac, Steam. Suele tener juegos interesantes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bigbadbundle.bundledragon.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/bbbLogo-500x461.png&#34; alt=&#34;bbbLogo&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Big Bad Bundle&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://bigbadbundle.bundledragon.com&#34;&gt;bigbadbundle.bundledragon.com&lt;/a&gt;&lt;/em&gt;
Tiene 3 niveles de compra progresivos y cada nivel contiene 4 juegos. Los valores mínimos para desbloquear cada nivel sería 1 USD, 5 USD y 8 USD. Todos disponibles para Steam.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.flyingbundle.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Flyingbundle1-500x375.png&#34; alt=&#34;Flyingbundle1&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Flying Bundle&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://www.flyingbundle.com&#34;&gt;flyingbundle.com&lt;/a&gt;&lt;/em&gt;
Constra de varios juegos, con clave Steam y/o Desura y hay que pagar mínimo 3 USD para desbloquarlos. Tiene un juego sorpresa pero no se si lo sacás una vez que pagás o después de un tiempo.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.dailyroyale.com/&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Daily-Royale.png&#34; alt=&#34;Daily Royale&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Daily Royale&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;http://www.dailyroyale.com/&#34;&gt;dailyroyale.com/&lt;/a&gt;&lt;/em&gt;
Tiene un sistema diferente, en lugar de ofrecer un paquete de juegos, es uno solo con un descuento alto y cantidad de keys limitadas para vender.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://indiegamestand.com&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Indie-Game-Stand.png&#34; alt=&#34;Indie Game Stand&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Indie Game Stand&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;https://indiegamestand.com&#34;&gt;indiegamestand.com&lt;/a&gt;&lt;/em&gt;
Este sitio vende un solo juego a la vez, con un mínimo de 1 USD para la clave de Steam. Agregando un poco te ganás la OST, con 10 USD te ganás el juego anterior que vendían más otro juego sorpresa y si están entre los top 3 de contribuidores ganan una remera de la página. Además, fuera de la oferta diaria, tiene un store.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://ikoid.com/&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/ikoid_black-500x130.png&#34; alt=&#34;ikoid_black&#34; /&gt;&lt;/a&gt;
&lt;strong&gt;Ikoid&lt;/strong&gt; - &lt;em&gt;&lt;a href=&#34;https://ikoid.com/&#34;&gt;ikoid.com/&lt;/a&gt;&lt;/em&gt;
También tiene un sistema diferente, tiene 3 juegos bastante baratos (menos de 2 USD) y se desbloquean más juegos dependiendo de la cantidad de shares en FB o +1 en Google+ o tweets, depende del bundle. Buena forma de hacerse promoción.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bundle-in-a-box.com/&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2014/02/Bundle-in-a-box.png&#34; alt=&#34;Bundle in a box&#34; /&gt;&lt;/a&gt;
&lt;del&gt;Dick&lt;/del&gt;Bundle in a box - &lt;em&gt;[bundle-in-a-box.com&lt;/em&gt;/](&lt;a href=&#34;http://bundle-in-a-box.com/&#34;&gt;http://bundle-in-a-box.com/&lt;/a&gt;)
Tiene varios juegos desbloqueables con 0.99 USD y varios que se desbloquean pasando el promedio a lo Humble Bundle (también incluye OST). Detalle, algunos juegos se descargan, otros tienen clave Steam, otros Desura; para Windows y/o Mac y/o Linux.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jQuery: Selectores y Traversing</title>
      <link>/jesusroldan.com/posts/jquery-selectores-y-traversing/</link>
      <pubDate>Wed, 26 Feb 2014 15:56:32 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/jquery-selectores-y-traversing/</guid>
      <description>&lt;p&gt;Voy a poner esto acá, haciendo las veces de ayudamemoria. Además para el que no sepa, siempre viene bien tener un listado e investigarlos.
Selectores/Traversing (que no encontré una traducción buena) en jQuery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Selectores básicos&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $(&amp;quot;#idName&amp;quot;)          // Por id
  $(&amp;quot;.className&amp;quot;)       // Por clase

  $(document)           // DOM (Document Object Model)
  $(window)             // DOM + imágenes + iframes

  $(&amp;quot;*&amp;quot;)                // todos los elementos
  $(&amp;quot;div.title&amp;quot;)        // &amp;lt;div class=&amp;quot;title&amp;quot;&amp;gt; &amp;lt;/div&amp;gt;
  $(&amp;quot;div:first&amp;quot;)        // Primer div

  $(&amp;quot;article h1&amp;quot;)       // Todos los h1 dentro de article
  $(&amp;quot;article &amp;gt; h1&amp;quot;)     // Todos los h1 hijos directo de article

  $(&amp;quot;[href]&amp;quot;)           // Todos los elementos que tengan href
  $(&amp;quot;li:nth-child(n)&amp;quot;)  // El elmento n - *cuenta desde 1*

  $(&amp;quot;tr:even&amp;quot;)          // TableRows pares  
  $(&amp;quot;p:hidden&amp;quot;)         // Todos los &amp;lt;p&amp;gt; ocultos (con .hide())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Selectores &amp;ldquo;avanzados&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $(&amp;quot;:input&amp;quot;)           // Todos los inputs
  $(&amp;quot;:text&amp;quot;)                 // Todos los elementos type=&amp;quot;text&amp;quot;
  $(&amp;quot;:checked&amp;quot;)              // Todos los elementos chequeados
  $(&amp;quot;:focus&amp;quot;)                // Todos los elementos que tengan foco

  $(&amp;quot;[href=&#39;index.html&#39;]&amp;quot;)   // href que sean igual a index.html
  $(&amp;quot;[href!=&#39;index.html&#39;]&amp;quot;)  // href que no sean igual a &amp;quot;index.html&amp;quot;
  $(&amp;quot;[href$=&#39;.html&#39;]&amp;quot;)       // href que terminen en &amp;quot;.html&amp;quot;
  $(&amp;quot;[href^=&#39;https://&#39;]&amp;quot;)    // href que empiezen en &amp;quot;https://&amp;quot;
  $(&amp;quot;[href*=&#39;cuenta&#39;]&amp;quot;)      // href que contengan &amp;quot;cuenta&amp;quot;

  $(&amp;quot;#nav ul li:first-child&amp;quot;)   // Primer li dentro de un/los ul que estén dentro de #nav
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**Traversing **&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $(&amp;quot;#nav ul:first li:eq(2)&amp;quot;)   // 3er li, dentro del 1er ul que esté en #nav *inicia en 0*
  $(&amp;quot;#nav ul:eq(0) li:eq(-1)&amp;quot;)  // Último li, dentro del 1er ul que esté en #nav
  $(&amp;quot;#nav ul li:gt(2)&amp;quot;)         // Los li que tengan un index mayor a 2
  $(&amp;quot;#nav ul li:lt(2)&amp;quot;)         // Los li que tengan un index menor a 2

  $(&amp;quot;#post&amp;quot;).not(&amp;quot;p&amp;quot;)           // Todos los elementos que no sean &amp;lt;p&amp;gt;
  $(&amp;quot;#nav ul li&amp;quot;).not(&amp;quot;:even&amp;quot;)  // Todos los li que no sean pares
  $(&amp;quot;#nav ul&amp;quot;).children(&amp;quot;:contains(&#39;Simulador&#39;)&amp;quot;)   // .children() busca todos los hijos del elemento, :contains() filtra por texto
  $(&amp;quot;#nav ul li p&amp;quot;).parent(&amp;quot;.active&amp;quot;) // Selecciona el li que tenga un p activo

  $( &amp;quot;#nav ul li&amp;quot; ).each(function( index ) { 
      console.log( index + &amp;quot;: &amp;quot; + $( this ).text() );
  });

  if ( $(&amp;quot;#nav&amp;quot;).is(&amp;quot;div&amp;quot;) ) { ... }    

  // Otras opciones:
  // .end() .find() .first() .last() .has() .next() .nextAll() .prev() .prevAll() ...
  // https://api.jquery.com/category/traversing/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>jQuery Doge - such plugin</title>
      <link>/jesusroldan.com/posts/jquery-doge-such-plugin/</link>
      <pubDate>Mon, 23 Dec 2013 14:31:40 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/jquery-doge-such-plugin/</guid>
      <description>&lt;p&gt;Hace unos días había liberado un plugin de jQuery bastante tonto, y ahora hice un update del mismo con unos cuantos bugs corregidos y además ahora pemite parametrizarlo, así pasa a estar un poco mas usable de lo que estaba antes.
Es mi primer plugin así que quizás no está tan optimizado&amp;hellip; aunque considero que no es tan inestable como pensé que podía quedar :)&lt;/p&gt;

&lt;p&gt;Pueden descargarlo &lt;a href=&#34;https://github.com/xeBuz/jquery-doge&#34;&gt;desde GitHub&lt;/a&gt; o ver un ejemplo del funcionamiento &lt;a href=&#34;http://jesusroldan.com/doge/demo.html&#34;&gt;desde esta demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;El uso básico es el siguiente, solo deben pasarle un listado de palabras a mostrar, ya incluye algunas por defecto (wow, so doge y asi):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(document).ready( function() {
   // Create an array with some words
   $(&#39;body&#39;).doge({ 
       wordList : [&amp;quot;such page&amp;quot;, &amp;quot;lorem impsum&amp;quot;, &amp;quot;so cool&amp;quot;, &amp;quot;much jquery&amp;quot;, &amp;quot;kitten&amp;quot;, &amp;quot;such demo&amp;quot;, &amp;quot;Kitten Ipsum&amp;quot;]
   });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;También se puede parametrizar un poco, con estas opciones:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(document).ready( function() {
   $(&#39;body&#39;).doge({ 
       wordList : [&amp;quot;such page&amp;quot;, &amp;quot;lorem impsum&amp;quot;, &amp;quot;so cool&amp;quot;, &amp;quot;much jquery&amp;quot;, &amp;quot;text&amp;quot;, &amp;quot;such demo&amp;quot;, &amp;quot;Kitten Ipsum&amp;quot;],
       showDoge : true,
       fontSize : &amp;quot;2em&amp;quot;,
       fontBorder: true,
       dogeImage : &amp;quot;doge.png&amp;quot;,
       colours : [&amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;, &amp;quot;orange&amp;quot;, &amp;quot;violet&amp;quot;, &amp;quot;aqua&amp;quot;, &amp;quot;yellow&amp;quot;, &amp;quot;slateblue&amp;quot;, &amp;quot;purple&amp;quot;, &amp;quot;pink&amp;quot;, &amp;quot;lime&amp;quot;, &amp;quot;fuchsia&amp;quot;, &amp;quot;gold&amp;quot;, &amp;quot;indigo&amp;quot;],
       textDuration: 1200,
       textRespawn: 1000,       
   });
});
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Licencia para ir al cine</title>
      <link>/jesusroldan.com/posts/licencia-para-ir-al-cine/</link>
      <pubDate>Mon, 01 Jul 2013 20:00:30 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/licencia-para-ir-al-cine/</guid>
      <description>&lt;p&gt;Así como existe una licencia para conducir que te permite manejar un vehículo debería existir un carnet que te habilite la entrada a los cines. La deberías sacar con un exámen previo con normas de convivencia y reglas básicas.
Este carnet se renovaría, podrías sacar entradas con un ID único y asi llevar un registro.&lt;/p&gt;

&lt;p&gt;Se podría imponer un sistema de puntos, que te descuenten por:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hablar: 3 puntos&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hablar por teléfono: 5 puntos.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Spoilear: 10 puntos.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Revolver el pochoclo: 1 punto.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Abrir caramelos: 2 puntos.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Tomar gaseosa cuando ya no hay nada: 2 puntos.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ir con un bebé: 5 puntos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Al perder x cantidad de puntos, se te revoca la licencia por unos meses y para renovarla hay que hacer un curso.&lt;/p&gt;

&lt;p&gt;No aseguraríamos que, al ir al cine, no renegaríamos con pelotudos que no saben comportarse :D&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Barra de progreso de Arch Linux para Python</title>
      <link>/jesusroldan.com/posts/barra-de-progreso-de-arch-linux-para-python/</link>
      <pubDate>Sun, 21 Oct 2012 20:49:21 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/barra-de-progreso-de-arch-linux-para-python/</guid>
      <description>&lt;p&gt;Hace unos días me puse a &lt;em&gt;portar&lt;/em&gt; la barra de progreso que tiene el sistema de paquetes de &lt;a href=&#34;http://blog.jesusroldan.com/2011/12/28/tips-para-mejorar-la-instacion-de-aplicaciones-en-arch/&#34;&gt;&lt;strong&gt;Arch Linux&lt;/strong&gt;&lt;/a&gt; (activando la opción &lt;strong&gt;ILoveCandy&lt;/strong&gt;) a Python &lt;del&gt;3&lt;/del&gt; 3.X y 2.7. De momento está en fase de prueba, pero es dentro de todo funcional, prometo ir actualizándola cuando pueda.&lt;/p&gt;

&lt;p&gt;Para poder instalarlo, pueden bajarse los fuentes &lt;a href=&#34;https://github.com/xeBuz/pacman-progressbar&#34;&gt;desde &lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; (es licencia Beer-ware, una adaptación de BSD) o mejor aún directamente desde PyPi:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo pip install pacmanprogressbar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;La utilización es la siguiente (proximamente voy a hacer que se pueda iterar directamente):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python
import time
from pacmanprogressbar import Pacman

if __name__ == &amp;quot;__main__&amp;quot;:
    p = Pacman(end=100)

    for x in range(p.len):
        p.update()
        time.sleep(.2)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Una vez instanciada la clase, tiene dos métodos públicos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;update([value])&lt;/strong&gt;, actualiza el progreso sumándole el valor del parámetro, por defecto suma 1.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;progress(value)&lt;/strong&gt;, en vez de sumarizar, se le pasa directamente el valor del progreso.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La salida en consola sería más o menos como esta:
&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/10/animacion.gif&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/10/animacion.gif&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Script para grabar la consola en un .gif animado</title>
      <link>/jesusroldan.com/posts/script-para-grabar-la-consola-en-un-gif-animado/</link>
      <pubDate>Thu, 18 Oct 2012 02:03:52 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/script-para-grabar-la-consola-en-un-gif-animado/</guid>
      <description>&lt;p&gt;Hoy me surgió una necesidad, que me pareció bastante simple pero no encontré herramientas simples que me lo solucionaran. Les dejo este script, que graba un gif de la consola durante X segundos (idea de @shinax y @rootmyword). Ese valor se lo pasamos por parámetro (no lo valido ni tiene default, porque la vida es demasiado corta para controlarlo) . Hay que correr el script con un &amp;amp; al final de la línea, asi pasa a correr en background y podemos usar la consola.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash
clear
mkdir temp_gif

segs=`expr $1 \* 5`

for (( i = 1; i &amp;lt;= $segs ; i++ ));
do
    printf -v number &amp;quot;%06d&amp;quot; $i
    import -window $WINDOWID temp_gif/$number.gif 
    sleep 0.2
done

convert -delay 20 -loop 0 temp_gif/*.gif animacion.gif

rm -R temp_gif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El código terminó siendo más simple de lo que pensaba, toda la magia la hace &lt;strong&gt;ImageMagick&lt;/strong&gt;. Explico por línea, porque la idea siempre es aprender como funciona:
Línea 5. Toma el primer parámetro que le demos, lo multiplica por 5 porque cada imagen la saco cada 0.2 segundos ;)
Línea 9. El &lt;strong&gt;printf&lt;/strong&gt; lo utilizo para formatear &amp;i;, neceito hacer un zero-padding, o sea, rellenar con ceros a la izquierda, para que después el conversor me tome el orden correcto. El parámetro -v indica que no lo imprima, sino que lo almacene en una variable.
Línea 10. ImageMagick se encarga de guardar la imágen de la ventana que le digo, para $WINDOWSID creo que es necesario &lt;strong&gt;xorg-xwininfo&lt;/strong&gt;, ya lo tenía instalado.
Línea 13. Toma todas las imágenes de la carpeta, las concatena con un delay de 0.2 segundos y hace un loop infinito.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Post-charla] Introducción al desarrollo web de videojuegos</title>
      <link>/jesusroldan.com/posts/post-charla-introduccion-al-desarrollo-web-de-videojuegos/</link>
      <pubDate>Fri, 07 Sep 2012 14:33:06 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/post-charla-introduccion-al-desarrollo-web-de-videojuegos/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/09/supermeatboy.png&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/09/supermeatboy.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Antes que nada gracias a todos los que fueron ayer a la &lt;a href=&#34;http://blog.jesusroldan.com/2012/09/05/charla-introduccion-al-desarrollo-web-de-videojuegos/&#34;&gt;charla de desarrollo de videojuegos&lt;/a&gt; y a la gente de &lt;a href=&#34;http://uni-code-group.blogspot.com.ar/&#34;&gt;&lt;strong&gt;UNI-CODE&lt;/strong&gt;&lt;/a&gt; por la invitación. Les dejo algunos links que había prometido o temas que quedaron en el aire. Cualquier cosa avisen.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Los slides están &lt;a href=&#34;http://jesusroldan.com/Charlas/Crafty/crafty.html&#34;&gt;online acá&lt;/a&gt;, es recomendable verlo a pantalla completa (espero que el touchpad no los trollée como a mi).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;El código fuente de &lt;a href=&#34;https://github.com/xeBuz/Charlas/tree/master/Crafty%20-%20Framework%20para%20videojuegos&#34;&gt;los slides está en GitHub&lt;/a&gt;. Usé &lt;a href=&#34;https://github.com/cykod/CoderDeck&#34;&gt;CoderDeck&lt;/a&gt; porque me permitía correr código JS y modificarlo mientras daba la charla.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Esta es la &lt;a href=&#34;http://craftyjs.com/api/&#34;&gt;documentación de Crafty&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Los componente extras de Crafty se pueden ver &lt;a href=&#34;http://craftycomponents.com/&#34;&gt;en este sitio&lt;/a&gt;. Inlcuso ahí está &lt;a href=&#34;http://craftycomponents.com/boilerplate&#34;&gt;Craftyboilerplate&lt;/a&gt; y &lt;a href=&#34;http://flexpi.com/&#34;&gt;Flexpi&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://leo-koppelkamm.de/polyCreator/&#34;&gt;Este sitio tiene el creador de polígonos&lt;/a&gt;, porque hacerlos a mano es muy denso.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;En un momento se comentó de un grupo de gente que se juntaba cada tanto pero nadie tenía demasiados datos, eran de &lt;a href=&#34;http://www.indiegamedev.org/&#34;&gt;IndieGameDev&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Vayan preparándose para la &lt;a href=&#34;http://gamejamcordoba.com/&#34;&gt;GlobalGameJam&lt;/a&gt; ;)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/09/Logo_Uni-Code.png&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/09/Logo_Uni-Code-150x150.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Charla] Introducción al desarrollo web de videojuegos</title>
      <link>/jesusroldan.com/posts/charla-introduccion-al-desarrollo-web-de-videojuegos/</link>
      <pubDate>Wed, 05 Sep 2012 12:54:41 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/charla-introduccion-al-desarrollo-web-de-videojuegos/</guid>
      <description>&lt;p&gt;El jueves 6 a las 19hs voy a estar en la UTN de Córdoba para dar una charla sobre desarrollo de videojuegos para navegadores (en HTML5, todos sabemos que Flash es malvado) invitado por la gente de &lt;a href=&#34;http://uni-code-group.blogspot.com.ar/&#34;&gt;&lt;strong&gt;UNI-CODE&lt;/strong&gt;&lt;/a&gt;, un grupo de estudiantes que se encarga de divulgación de tecnología libre de humo.&lt;/p&gt;

&lt;p&gt;La charla es abierta para todos y está de más decir que es gratis, va a ser muy introductoria con algunos conceptos básicos. También se va a mostrar un framework, &lt;a href=&#34;http://craftyjs.com/&#34;&gt;&lt;strong&gt;Crafty&lt;/strong&gt;&lt;/a&gt;, para simplificar el desarrollo. Si bien está pensada para programadores, la idea es juntar gente con ganas, quien sabe, puede surgir algun proyecto entre las personas que asistan. Las ganas de muchos están, falta organizarnos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/09/Flyer-6-9-12.jpg&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/09/Flyer-6-9-12-353x500.jpg&#34; alt=&#34;Desarrollo de videojuegos&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cadena de memes: Libros</title>
      <link>/jesusroldan.com/posts/cadena-de-memes-libros/</link>
      <pubDate>Sat, 11 Aug 2012 16:22:52 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/cadena-de-memes-libros/</guid>
      <description>&lt;p&gt;Si, 2012 y existen las cadenas de memes. Está me pareció muy interesante, la vi en &lt;a href=&#34;http://www.cienciakanija.com/2012/07/21/cadena-de-memes-libros/&#34;&gt;Ciencia Kanija&lt;/a&gt; (hace ya unos días y tuve el post en borrador) y me gustó la idea :D&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que cambió mi vida&lt;/strong&gt;
Es difícil decir que libro me cambió la vida, porque quizás todos en alguna medida lo hagan&amp;hellip; pero, le tengo mucho cariño a  La peste del francés Albert Camus porque fue uno de los primeros libros que recuerde haber agarrado por mi cuenta para leer por gusto.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que tuve que leer más de una vez&lt;/strong&gt;
Si bien no soy muy amante de releer los libros, en algunos caso en particular, como en El Señor de los Anillos, puede leer el libro una y otra vez. También puedo agregar a la lista El extraño caso del doctor Jekyll y el señor Hyde de Robert Louis Stevenson, que si bien es una historia muy conocida, adaptada muchísimas veces y todos sabemos que pasa&amp;hellip;está tan bien escrito el libro que se puede leer una y otra vez.
Obviamente esto no cuenta para libros que me vi obligado a empezar de nuevo por dejarlos un tiempo largo :P&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que me llevaría a una isla desierta&lt;/strong&gt;
La Biblia. Es grande y tiene muchas hojas, ideal para cuando escasee el papel higiénico. OOOOKKK. Un manual de supervivencia sería mi segunda opción, claro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que me hizo reír&lt;/strong&gt;&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/08/41201217484.jpg&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2012/08/41201217484-300x300.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
¡Uf! Muchísimos. Puedon nombrar la &amp;ldquo;Guía del autoestopista galáctico&amp;rdquo; de Douglas Adams o Discworld de Terry Pratchett pero voy a caer en la obviedad. Un libro que leí hace poco que me hizo reir mucho fue &amp;ldquo;Los Enanos Gullys&amp;rdquo; de Parkinson Dan, basado en la cosmogonía de Dragonlance. Una aventura épica que mezcla a la raza mas insulsa y a la más poderosa de todo Krynn. Un dragón (Verden) castigado por Takhisis tiene que defender a una tribu de enanos Gullys, en una combinación que no falla.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que me hizo llorar&lt;/strong&gt;
No se si llorar, pero la Saga de Los Confines de Liliana Bodoc tiene momentos por demás tristes, la muerte de los personajes que mas se hacen querer es muy duro, por momentos mirás al libro y decís &amp;ldquo;¡Liliana basta de matar gente buena!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que me hubiera gustado escribir&lt;/strong&gt;
Idem al item anterior, una fantasía tokieana con referencias a las invasiones españolas en América, es una formula infalible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que aborrezco&lt;/strong&gt;
Cualquier libro que me obligaron a leer en el colegio entra en esta categoría, pero sobre todo: Juan Salvador Gaviota. Los libros de autoayuda y los de Coelho, el Arjona de la literatura,  completan el podio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que me decepcionó&lt;/strong&gt;
No se si &amp;ldquo;decepción&amp;rdquo; sea la palabra, pero Los Pilares de la Tierra de Ken Follet me pareció un libro estúpidamente largo. Quizás un arquitecto lo aprecie más que un desarrollador de software. Y el final es lo más &amp;ldquo;meh&amp;rdquo; que leí. Curiosamente el post de dónde saqué la cadena habla del mismo libro&amp;hellip; es que, es muy tedioso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que estoy leyendo ahora&lt;/strong&gt;
Ayer empecé El Silmarillón, pero lo dejé a los 5 minutos porque la edición es vieja (tiene mi edad) y está impecable, me da cosa arruinarlo. Así que ahora estoy con las obras completas de H.P. Lovecraft.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un libro que pretendo leer&lt;/strong&gt;
Read all the books! La lista es larguísima&amp;hellip; quisiera tener el tiempo suficiente.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Script para generar playlists dinámicas en MPD </title>
      <link>/jesusroldan.com/posts/script-para-generar-playlists-dinamicas-en-mpd/</link>
      <pubDate>Fri, 10 Aug 2012 13:55:24 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/script-para-generar-playlists-dinamicas-en-mpd/</guid>
      <description>&lt;p&gt;Revisando scripts viejos, me encontré con este que quizás a alguno le puede servir. La idea es ir generando dinámicamente la lista de reproducción de un server &lt;a href=&#34;http://mpd.wikia.com/&#34;&gt;MPD&lt;/a&gt; usando la &lt;a href=&#34;http://www.last.fm/api&#34;&gt;API&lt;/a&gt; de &lt;a href=&#34;http://www.last.fm/user/xeBuz&#34;&gt;Last.fm&lt;/a&gt; para encontrar artistas similares en el disco.
Si bien ya hay clientes que tienen esta funcionalidad, como &lt;a href=&#34;http://mpd.wikia.com/wiki/Client:Ario&#34;&gt;Ario&lt;/a&gt;, suelo conectarme por SSH al server y me resulta cómodo correr el script este cuando no se que escuchar.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
import random
from mpd import (MPDClient, CommandError)
from audioscrobbler import AudioScrobblerQuery

&amp;quot;&amp;quot;&amp;quot; MPD &amp;quot;&amp;quot;&amp;quot;
mpd_host = &#39;localhost&#39;
mpd_port = &#39;6600&#39;
mpd_connection = {&#39;host&#39;: mpd_host, &#39;port&#39;: mpd_port}
client = MPDClient()

COUNT_SONGS = 5

def mpd_connect():
    try:
        client.connect(**mpd_connection)
    except SocketError:
        return False
    return True


def main():
    if not mpd_connect():
        sys.exit(1)

    # Meh, no se si se hace esto, pero bueh
    recommended_artists = []
    recommended_songs = []

    # Obtengo la cancion que esta sonando en este momento
    current = client.currentsong()

    # Saco sólo el artista del diccionario que me devuelve current
    current_artist = AudioScrobblerQuery(artist=current[&#39;artist&#39;])

    # En base a todos los artistas similares, me fijo cuales tengo en el
    # server MPD, y los almaceno para usarlos despues.
    for artist in current_artist.similar():
        if float(client.count(&amp;quot;artist&amp;quot;, artist.name)[&#39;songs&#39;]) &amp;gt; 0:
            recommended_artists.append(artist.name)


    # Podria hacerlo mas efectivo, pero la idea es hacerlo lo mas random que
    # pueda, asi que desordeno la lista de similares, que siempre viene ya
    # ordenada por compatibilidad del current_artist
    random.shuffle(recommended_artists)

    while len(recommended_songs) &amp;lt; COUNT_SONGS:
        artist = random.choice(recommended_artists)
        recommended_songs.append(
                    random.choice(client.search(&#39;artist&#39;, artist)))

    for song in recommended_songs:
        print song[&amp;quot;artist&amp;quot;], &amp;quot;-&amp;quot;, song[&amp;quot;title&amp;quot;]
        client.add(song[&amp;quot;file&amp;quot;])

if __name__ == &#39;__main__&#39;:
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Descarga desde aca: &lt;a href=&#34;https://gist.github.com/1100627&#34;&gt;GIST&lt;/a&gt;, seguramente la iré modificando, la idea es dejarla corriendo como un servicio.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>