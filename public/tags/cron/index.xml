<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cron on xeBuz Personal Website</title>
    <link>http://jesusroldan.com/tags/cron/</link>
    <description>Recent content in Cron on xeBuz Personal Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 May 2012 16:48:07 +0000</lastBuildDate>
    <atom:link href="http://jesusroldan.com/tags/cron/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cron, automatizar scripts como un titán</title>
      <link>http://jesusroldan.com/posts/cron-automatizar-scripts-como-un-titan/</link>
      <pubDate>Tue, 22 May 2012 16:48:07 +0000</pubDate>
      
      <guid>http://jesusroldan.com/posts/cron-automatizar-scripts-como-un-titan/</guid>
      <description>&lt;p&gt;Hace un tiempo escribí sobre [la utilización del comando &lt;strong&gt;at&lt;/strong&gt;], ahora le toca el turno a &lt;strong&gt;cron&lt;/strong&gt;. ¿Tron? No, cron. ¡Troz! (?).
¿Qué es cron? Es un administrador de procesos que se ejecuta a un interválo de tiempo específico. Si vienen del Dark Side, sería el equivalente a las &lt;em&gt;Tareas Programadas&lt;/em&gt; de W.&lt;/p&gt;

&lt;p&gt;La instalación es simple (está en los repos o incluso ya instalada, en toda distribución que se jacte de ser tal), en fín, en Arch podrían hacer:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    pacman -S --needed cronie
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al principio puede resultar extraña la configuracion de crontab, pero con el tiempo termina siendo más simple de lo que aparenta y se puede lograr cosas muy buenas de una forma muy sencilla.&lt;/p&gt;

&lt;p&gt;Primero, tenemos 5 espacios para colocar los tiempos, que se dividen en minutos, horas, días del mes, meses y días de la semana; si alguno de estos datos no se rellena, se debe colocar un asterísco, que significa &amp;ldquo;todos&amp;rdquo; (para que sea entendible y hasta leíble). Después de eso se coloca la ruta completa del script que quieren que se ejecute en ese determinado lapso de tiempo.&lt;/p&gt;

&lt;p&gt;En cualquier campo, asumiendo que ya entendimos los rangos de cada uno, podemos colocar tanto un valor específico, varios valores separados por coma o un rango separado por un guión. Por ejemplo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#Se ejecuta a las 5 de la mañana, en punto
0 5 * * * * /home/jesus/Scripts/tomar_cafe.sh

#Se ejecuta a las 5 y a las 17 horas, en punto
0 5,17 * * * /home/jesus/Scripts/loquesea.sh

#Se ejecuta *desde* las 5, cada hora &amp;quot;en punto&amp;quot; *hasta* las 17hs.
0 5-17 * * * /home/jesus/Scripts/latigo.sh

#Similar al anterior, pero ejecuta cada minuto entre las 5 y las 17
#miren el primer valor, le estan dicieno &amp;quot;todos&amp;quot;
* 5,17 * * * echo &amp;quot;trabajen mas duro&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¿Cómo ver las tareas pendientes en cron?
&lt;strong&gt;crontab -l&lt;/strong&gt; lista las del usuario activo, para ver las de otro usuario, deben ejecutar crontab -u user -l&lt;/p&gt;

&lt;p&gt;¿Cómo se modifican las tareas?
Con &lt;strong&gt;crontab -e&lt;/strong&gt; se nos abre el archivo para modificar, con el editor que tengamos por defecto. Para cambiarlo debemos cambiar: &lt;em&gt;export EDITOR=&amp;ldquo;/usr/bin/nano&amp;rdquo;&lt;/em&gt;. Como por defecto se abre con vi, por favor no toquen el teclado si no saben como funciona y llamen a un mayor responsable a cargo.
También pueden editar los archivos de otros usuarios, con **contab -u user -e **.&lt;/p&gt;

&lt;p&gt;Ahora bien, aquí viene lo bueno jóven, algunos ejemplos:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#Corre cada minuto, siempre.
* * * * * /home/xebuz/script/cada_minuto.sh

#Cada 5 minutos
*/5 * * * * /home/xebuz/script/cada_cinco_minutos.sh

#Cada hora, de 8 a 18, de lunes a viernes
00 08-18 * * 1-5 /home/xebuz/script/laboral.sh

#Una vez cada mes y medio
* * */15 */1 * /home/xebuz/goldequilmes.sh

#Cada 4 años
* * * */48 * /home/xebuz/script/mundial.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;¿Muy engorroso para escribir? ¿Sos un lazy-sysadmin? Existen también algunos alias, para agilizar la administración, són cómodos y reemplazan a todos los campos de tiempo, es decir, sólo deben poner el alias y despues el script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#Tiempos específicos
@hourly
@daily
@weekly
@monthly
#Este se ejecuta (como lo indica el nombre), cuando se resetea el equipo
@reboot
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>