<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on title</title>
    <link>jesusroldan.com/categories/tips/</link>
    <description>Recent content in Tips on title</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 May 2014 13:34:35 +0000</lastBuildDate>
    <atom:link href="jesusroldan.com/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Close Tab en Firefox 31</title>
      <link>/jesusroldan.com/posts/no-close-tabs-firefox-31/</link>
      <pubDate>Wed, 14 May 2014 13:34:35 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/no-close-tabs-firefox-31/</guid>
      <description>&lt;p&gt;Practicamente desde que uso Mozilla Firefox le quito el ícono de cerrar a las solapas, me ahorra espacio y minimiza el riesgo de cerrar por error alguna.
En versiones anteriores a Firefox 31, desde &lt;strong&gt;about:config&lt;/strong&gt; se podía editar desde la siguiente opción:
&lt;code&gt;browser.tabs.closeButtons = 0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Pero debido a cambios en las tabs, esto deja de tener validez, y a partir de la versión 31 la configuración UI se realiza desde:
&lt;code&gt;browser.uiCustomization.state&lt;/code&gt;
y no es un solo campo, sino que nos da un JSON mucho mas complejo
[spoiler title=&amp;ldquo;Configuración original - JSON&amp;rdquo; style=&amp;ldquo;fancy&amp;rdquo; icon=&amp;ldquo;chevron&amp;rdquo;]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;placements&amp;quot;: {
        &amp;quot;PanelUI-contents&amp;quot;: [&amp;quot;edit-controls&amp;quot;, &amp;quot;zoom-controls&amp;quot;, &amp;quot;new-window-button&amp;quot;, &amp;quot;privatebrowsing-button&amp;quot;, &amp;quot;save-page-button&amp;quot;, &amp;quot;print-button&amp;quot;, &amp;quot;history-panelmenu&amp;quot;, &amp;quot;fullscreen-button&amp;quot;, &amp;quot;find-button&amp;quot;, &amp;quot;preferences-button&amp;quot;, &amp;quot;add-ons-button&amp;quot;, &amp;quot;ecb-button&amp;quot;, &amp;quot;abp-toolbarbutton&amp;quot;, &amp;quot;tb-venkman-open&amp;quot;, &amp;quot;measureit_toolbar_button&amp;quot;, &amp;quot;sessionmanager-undo&amp;quot;, &amp;quot;sessionmanager-toolbar&amp;quot;],
        &amp;quot;GiT-addon-bar&amp;quot;: [&amp;quot;GiT-addon-bar-toggle-button&amp;quot;, &amp;quot;epubreader-catalog-button&amp;quot;, &amp;quot;useragentswitcher-button&amp;quot;, &amp;quot;colorzilla-navbar-button&amp;quot;, &amp;quot;awesome-screenshot-toolbarbutton&amp;quot;, &amp;quot;RIL_toolbar_button&amp;quot;, &amp;quot;feed-button&amp;quot;, &amp;quot;customizableui-special-spring51&amp;quot;, &amp;quot;widget:jid1-n85lxPv1NAWVTQ@jetpack-freeMemory&amp;quot;, &amp;quot;FoxyScrobblerToolbarButton&amp;quot;, &amp;quot;GiT-status-bar-container&amp;quot;],
        &amp;quot;web-developer-toolbar&amp;quot;: [&amp;quot;web-developer-disable-toolbar&amp;quot;, &amp;quot;web-developer-cookies-toolbar&amp;quot;, &amp;quot;web-developer-css-toolbar&amp;quot;, &amp;quot;web-developer-forms-toolbar&amp;quot;, &amp;quot;web-developer-images-toolbar&amp;quot;, &amp;quot;web-developer-information-toolbar&amp;quot;, &amp;quot;web-developer-miscellaneous-toolbar&amp;quot;, &amp;quot;web-developer-outline-toolbar&amp;quot;, &amp;quot;web-developer-resize-toolbar&amp;quot;, &amp;quot;web-developer-tools-toolbar&amp;quot;, &amp;quot;web-developer-view-source-toolbar&amp;quot;, &amp;quot;web-developer-options-toolbar&amp;quot;, &amp;quot;customizableui-special-spring1&amp;quot;, &amp;quot;web-developer-render-mode-statusbar&amp;quot;, &amp;quot;web-developer-css-statusbar&amp;quot;, &amp;quot;web-developer-javascript-statusbar&amp;quot;],
        &amp;quot;addon-bar&amp;quot;: [&amp;quot;addonbar-closebutton&amp;quot;, &amp;quot;status-bar&amp;quot;],
        &amp;quot;PersonalToolbar&amp;quot;: [&amp;quot;personal-bookmarks&amp;quot;],
        &amp;quot;nav-bar&amp;quot;: [&amp;quot;urlbar-container&amp;quot;, &amp;quot;search-container&amp;quot;, &amp;quot;webrtc-status-button&amp;quot;, &amp;quot;downloads-button&amp;quot;, &amp;quot;igc-toolbar-button&amp;quot;, &amp;quot;social-share-button&amp;quot;, &amp;quot;developer-button&amp;quot;, &amp;quot;widget:jid1-4P0kohSJxU1qGg@jetpack-browserAction0&amp;quot;],
        &amp;quot;TabsToolbar&amp;quot;: [&amp;quot;tabbrowser-tabs&amp;quot;, &amp;quot;new-tab-button&amp;quot;, &amp;quot;tabview-button&amp;quot;, &amp;quot;alltabs-button&amp;quot;, &amp;quot;tabs-closebutton&amp;quot;],
        &amp;quot;toolbar-menubar&amp;quot;: [&amp;quot;menubar-items&amp;quot;]
    },
    &amp;quot;seen&amp;quot;: [&amp;quot;abp-toolbarbutton&amp;quot;, &amp;quot;GiT-special-spring&amp;quot;, &amp;quot;GiT-special-spacer&amp;quot;, &amp;quot;GiT-special-separator&amp;quot;],
    &amp;quot;dirtyAreaCache&amp;quot;: [&amp;quot;PersonalToolbar&amp;quot;, &amp;quot;nav-bar&amp;quot;, &amp;quot;TabsToolbar&amp;quot;, &amp;quot;toolbar-menubar&amp;quot;, &amp;quot;PanelUI-contents&amp;quot;, &amp;quot;web-developer-toolbar&amp;quot;, &amp;quot;addon-bar&amp;quot;, &amp;quot;GiT-addon-bar&amp;quot;],
    &amp;quot;newElementCount&amp;quot;: 59
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[/spoiler]&lt;/p&gt;

&lt;p&gt;Para dejar de tener el botón, hay que quitar &lt;strong&gt;&amp;ldquo;tabs-closebutton&amp;rdquo;&lt;/strong&gt;, se aplican los cambios sin reiniciar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cron, automatizar scripts como un titán</title>
      <link>/jesusroldan.com/posts/cron-automatizar-scripts-como-un-titan/</link>
      <pubDate>Tue, 22 May 2012 16:48:07 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/cron-automatizar-scripts-como-un-titan/</guid>
      <description>&lt;p&gt;Hace un tiempo escribí sobre &lt;a href=&#34;http://blog.jesusroldan.com/2012/01/23/comando-at-automatizar-scripts-sin-usar-crontab/&#34;&gt;la utilización del comando &lt;strong&gt;at&lt;/strong&gt;&lt;/a&gt;, ahora le toca el turno a &lt;strong&gt;cron&lt;/strong&gt;. ¿Tron? No, cron. ¡Troz! (?).
¿Qué es cron? Es un administrador de procesos que se ejecuta a un interválo de tiempo específico. Si vienen del Dark Side, sería el equivalente a las &lt;em&gt;Tareas Programadas&lt;/em&gt; de W.&lt;/p&gt;

&lt;p&gt;La instalación es simple (está en los repos o incluso ya instalada, en toda distribución que se jacte de ser tal), en fín, en Arch podrían hacer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -S --needed cronie
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al principio puede resultar extraña la configuracion de crontab, pero con el tiempo termina siendo más simple de lo que aparenta y se puede lograr cosas muy buenas de una forma muy sencilla.&lt;/p&gt;

&lt;p&gt;Primero, tenemos 5 espacios para colocar los tiempos, que se dividen en minutos, horas, días del mes, meses y días de la semana; si alguno de estos datos no se rellena, se debe colocar un asterísco, que significa &amp;ldquo;todos&amp;rdquo; (para que sea entendible y hasta leíble). Después de eso se coloca la ruta completa del script que quieren que se ejecute en ese determinado lapso de tiempo.&lt;/p&gt;

&lt;p&gt;En cualquier campo, asumiendo que ya entendimos los rangos de cada uno, podemos colocar tanto un valor específico, varios valores separados por coma o un rango separado por un guión. Por ejemplo:&lt;/p&gt;

&lt;p&gt;[code lang=&amp;ldquo;bash&amp;rdquo;]
#Se ejecuta a las 5 de la mañana, en punto
0 5 * * * * /home/jesus/Scripts/tomar_cafe.sh&lt;/p&gt;

&lt;p&gt;#Se ejecuta a las 5 y a las 17 horas, en punto
0 5,17 * * * /home/jesus/Scripts/loquesea.sh&lt;/p&gt;

&lt;p&gt;#Se ejecuta &lt;em&gt;desde&lt;/em&gt; las 5, cada hora &amp;ldquo;en punto&amp;rdquo; &lt;em&gt;hasta&lt;/em&gt; las 17hs.
0 5-17 * * * /home/jesus/Scripts/latigo.sh&lt;/p&gt;

&lt;p&gt;#Similar al anterior, pero ejecuta cada minuto entre las 5 y las 17
#miren el primer valor, le estan dicieno &amp;ldquo;todos&amp;rdquo;
* 5,17 * * * echo &amp;ldquo;trabajen mas duro&amp;rdquo;
[/code]&lt;/p&gt;

&lt;p&gt;¿Cómo ver las tareas pendientes en cron?
&lt;strong&gt;crontab -l&lt;/strong&gt; lista las del usuario activo, para ver las de otro usuario, deben ejecutar crontab -u user -l&lt;/p&gt;

&lt;p&gt;¿Cómo se modifican las tareas?
Con &lt;strong&gt;crontab -e&lt;/strong&gt; se nos abre el archivo para modificar, con el editor que tengamos por defecto. Para cambiarlo debemos cambiar: &lt;em&gt;export EDITOR=&amp;ldquo;/usr/bin/nano&amp;rdquo;&lt;/em&gt;. Como por defecto se abre con vi, por favor no toquen el teclado si no saben como funciona y llamen a un mayor responsable a cargo.
También pueden editar los archivos de otros usuarios, con **contab -u user -e **.&lt;/p&gt;

&lt;p&gt;Ahora bien, aquí viene lo bueno jóven, algunos ejemplos:&lt;/p&gt;

&lt;p&gt;[code lang=&amp;ldquo;bash&amp;rdquo;]
#Corre cada minuto, siempre.
* * * * * /home/xebuz/script/cada_minuto.sh&lt;/p&gt;

&lt;p&gt;#Cada 5 minutos
*/5 * * * * /home/xebuz/script/cada_cinco_minutos.sh&lt;/p&gt;

&lt;p&gt;#Cada hora, de 8 a 18, de lunes a viernes
00 08-18 * * 1-5 /home/xebuz/script/laboral.sh&lt;/p&gt;

&lt;p&gt;#Una vez cada mes y medio
* * */15 */1 * /home/xebuz/goldequilmes.sh&lt;/p&gt;

&lt;p&gt;#Cada 4 años
* * * */48 * /home/xebuz/script/mundial.sh
[/code]&lt;/p&gt;

&lt;p&gt;¿Muy engorroso para escribir? ¿Sos un lazy-sysadmin? Existen también algunos (llamémosle) &lt;a href=&#34;http://blog.jesusroldan.com/2011/09/02/tips-para-linux-alias-para-todos/&#34;&gt;alias&lt;/a&gt;, para agilizar la administración, són cómodos y reemplazan a todos los campos de tiempo, es decir, sólo deben poner el alias y despues el script.&lt;/p&gt;

&lt;p&gt;[code lang=&amp;ldquo;bash&amp;rdquo;]
#Tiempos específicos
@hourly
@daily
@weekly
@monthly
#Este se ejecuta (como lo indica el nombre), cuando se resetea el equipo
@reboot
[/code]&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Gracias, vuelva prontos.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Comando at, automatizar scripts sin usar crontab</title>
      <link>/jesusroldan.com/posts/comando-at-automatizar-scripts-sin-usar-crontab/</link>
      <pubDate>Mon, 23 Jan 2012 16:34:56 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/comando-at-automatizar-scripts-sin-usar-crontab/</guid>
      <description>&lt;p&gt;A diferencia de &lt;strong&gt;cron&lt;/strong&gt;, &lt;strong&gt;at&lt;/strong&gt; permite programar un comando/script para que sea ejecutado sólo una vez y no periodicamente.&lt;/p&gt;

&lt;p&gt;Antes que nada deben instalarlo, no suele venir en las distribuciones por defecto. Usen pacman, aptitude, yum o lo que sea, tiene que estar en los repositorios.
Una vez instalado, deben correr el servicio y por que no agregarlo en el /etc/rc.conf para que arranque solo. Si no hacen esto no van a correrse los scripts.&lt;/p&gt;

&lt;p&gt;Para utilizarlo tenemos varias alternativas, la primera es &lt;em&gt;especificarle la fecha y hora&lt;/em&gt;, luego escribir el script (es importante que una vez que terminemos, presionemos Control+D):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;at 10:31am Jan 23 
warning: commands will be executed using /bin/sh
at&amp;gt; yaourt -Syu      
at&amp;gt; (Control +D) &amp;lt;eot&amp;gt;
job 5 at Mon Jan 23 10:31:00 2012
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;También acepta otros &lt;em&gt;formatos&lt;/em&gt; de fechas, por ejemplo, para ejecutar algo mañana a esta misma hora, sería&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;at now tomorrow
at&amp;gt; blah blah
at&amp;gt; meh
at&amp;gt; (Control +D) &amp;lt;eot&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para mostrar los comandos que están en cola de ejecución, basta con hacer &lt;strong&gt;at -l&lt;/strong&gt; o &lt;strong&gt;atq&lt;/strong&gt;, esto nos traerá un id, la fecha/hora en la que se ejecuta y el usuario que lo creó.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;at -l
6   Mon Jan 23 11:41:00 2012 a xebuz
7   Wed Jan 25 00:01:00 2012 a xebuz
5   Mon Jan 23 10:31:00 2012 a xebuz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Para cancelar o eliminar una tarea pendiente, se utiliza &lt;strong&gt;atrm&lt;/strong&gt; o &lt;strong&gt;at -r&lt;/strong&gt; o &lt;strong&gt;at -d&lt;/strong&gt; :P, seguida del id de la tarea (obtenida desde el comando anterior).
Por último, si quieren ver todo el contenido del script, con &lt;strong&gt;at -c &lt;em&gt;id&lt;/em&gt;&lt;/strong&gt; lo obtienen completo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Manejar procesos en Linux, Like a Sir</title>
      <link>/jesusroldan.com/posts/manejar-procesos-en-linux-like-a-sir/</link>
      <pubDate>Wed, 14 Dec 2011 18:24:08 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/manejar-procesos-en-linux-like-a-sir/</guid>
      <description>&lt;p&gt;Particularmente me gusta tener alguna de las aplicaciones listo corriendo en la tty1 y cuando algo falla, porque siempre algo puede malir sal, control + alt +F1 viene como piña para ver el problema rápido.
Me pasó de tener problemas en ambientes Windows, y es una de las cosas que mas se extrañan; el administrador de tareas no hace todo lo que debería (como el de Gnome o KDE, si algo falla en el X o te quedás sin recursos no los vas a poder usar)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ps y kill&lt;/strong&gt;
Estos comandos son los clásicos, por excelencia.
El uso estandar, cavernícola y mas difundido es &lt;em&gt;ps aux&lt;/em&gt;, tambien &lt;em&gt;ps aux | grep &lt;app&gt;&lt;/em&gt; para filtrar, y después un &lt;em&gt;kill -9 UID&lt;/em&gt; obtenido con el comando anterior, pero eso no es lo que un Sir haría.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pgrep y pkill&lt;/strong&gt;
Tenemos pgrep funcionaría como pidof, pero con mejor parametrización e información; mientras que pkill sirve para mandar señales, si, como kill, pero permite expersiones regulares y algunos filtros muy interesantes.
Algunos ejemplos: &lt;em&gt;pgrep -u firebird -l&lt;/em&gt; mostraría todos los nombres de los procesos que esta usando el usuario firebird, &lt;em&gt;pkill -9 firefox&lt;/em&gt; es mucho más cómodo que el ps y después el kill.. dirán &amp;ldquo;¡Dejate de joder! ¡es igual que killall!&amp;rdquo; pero no, pueden potenciarlo más, digamos, matar la tty0 o mejor aún una sesión ssh basta correr con &lt;em&gt;pkill -9 -t pts/5&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;top&lt;/strong&gt;
Visualizador de procesos. Si llegaste hasta acá imagino que ya lo usaste y sabés lo básico, les tengo fe. Sólo para el registro, me gusta activar las opciones B, 1 y z.
De nuevo, es lo más usado, lo mas enseñado y lo mas clásico. Siempre hay mejores opciones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;htop&lt;/strong&gt;
Es como top, pero con esteroides. Mejores shortcuts, colores, permite usar el mouse, mejor navegabilidad, filtros, ordenación, threads y otras chucherías.
Las funcionalidades mas uso: &amp;lt; para ordenar, F9 para matar apps, F3 para buscat, t para treeview,
Ya que estamos, la H es de Hisham, el nombre del desarrollador.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;atop&lt;/strong&gt;
Es una de esas aplicaciones que está buena para abrirlas cuando alguien no-linuxero se acerca a tu PC, así piensa que te conectas a la Matrix desde el teclado y le vas pasando órdenes por ósmosis.
Sería una versión mas detallada de las dos aplicaciones anteriores, pero menos interactiva. Les daría algun tip, pero lo uso de poser nada más :P
&amp;lt;!&amp;ndash; more &amp;ndash;&amp;gt;
Aca una imágen comparativa, a la izquierda top, a la dercha htop, abajo atop.&lt;/p&gt;

&lt;p&gt;[caption id=&amp;ldquo;attachment_541&amp;rdquo; align=&amp;ldquo;aligncenter&amp;rdquo; width=&amp;ldquo;695&amp;rdquo; caption=&amp;ldquo;Comparativa entre Top, Htop y Atop&amp;rdquo;]&lt;a href=&#34;http://blog.jesusroldan.com/wp-content/uploads/2011/12/top.png&#34;&gt;&lt;img src=&#34;http://blog.jesusroldan.com/wp-content/uploads/2011/12/top-1024x538.png&#34; alt=&#34;Comparativa entre Top, Htop y Atop&#34; /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;Espero que les sirva, dígale no al ps blah grep blah kill blah. Iba a escribir también sobre prioridades y estados, pero lo hago otro día, post largo y denso = post que no se lee.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Moverse entre directorios como un ninja</title>
      <link>/jesusroldan.com/posts/tips-linuxeros-moverse-entre-directorios-como-un-ninja/</link>
      <pubDate>Wed, 28 Sep 2011 14:28:14 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/tips-linuxeros-moverse-entre-directorios-como-un-ninja/</guid>
      <description>&lt;p&gt;Seguramente &lt;strong&gt;cd&lt;/strong&gt; es uno de los comandos que más usamos, y también de los primeros que aprendemos a usar (junto con ls, rm, mkdir y esas cosas).
Es posible que no usen todo el potencial que tiene, tampoco es la locura, pero tiene algunos detalles con los que vamos a poder ahorrarnos tiempo y optimizar la navegación entre directorios, porque desde la consola todo es mejor y mas rápido :P&lt;/p&gt;

&lt;p&gt;El uso estandar sería: **cd directorio/ **&lt;/p&gt;

&lt;p&gt;Para ir al home del usuario, podemos hacer &lt;strong&gt;cd $HOME&lt;/strong&gt; o &lt;strong&gt;cd ~&lt;/strong&gt; o mucho mejor (porque ese símbolo nunca me sale) &lt;strong&gt;cd&lt;/strong&gt;, sin espacio.
Para ir al home de otro usuario, basta con &lt;strong&gt;cd ~marvin&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Podemos volver posiciones hacia atrás e incluso seguir navegando a partir de esa posicion, por ejemplo, aca volvemos 2 niveles atras y etramos a otrodir: &lt;strong&gt;cd ../../otrodir/&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para volver al directorio previo (al directorio donde nos encontrabamos antes, no a un nivel anterior) hay que usar &lt;strong&gt;cd -&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Para crear un directorio y movernos al mismo: &lt;strong&gt;mkdir test &amp;amp;&amp;amp; cd $_&lt;/strong&gt; (pueden ponerlo en un &lt;a href=&#34;http://blog.jesusroldan.com/2011/09/02/tips-para-linux-alias-para-todos/&#34;&gt;alias&lt;/a&gt;, sería mas comódo)&lt;/p&gt;

&lt;p&gt;También existe una solución a la dislexia, los teclados duros, o la utilización de la consola apenas nos levantamos. Si corremos &lt;strong&gt;shopt -s cdspell&lt;/strong&gt; (o mejor aún. si lo agregamos al ~bashrc) nos corrige errores de tipeo, por ejemplo, si hacemos cd /hom/xebuz nos lleva a /home/xebuz, muy útil.&lt;/p&gt;

&lt;p&gt;Bueno, eso.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Big Brother is watching you. Monitorear usuarios en Linux.</title>
      <link>/jesusroldan.com/posts/big-brother-is-watching-you-monitorear-usuarios-en-linux/</link>
      <pubDate>Sun, 25 Sep 2011 16:18:50 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/big-brother-is-watching-you-monitorear-usuarios-en-linux/</guid>
      <description>&lt;p&gt;Mantener un sistema estable a veces requiere observar que estan haciendo los usuarios.
No significa que tengamos que ponernos la gorra del Partido y salir a perseguir a Emmanuel Goldstein, sino sólo controlar un poco los recursos, evitando picos altos que puedan provocarnos inestabilidad.
Acá les dejo un par de comandos o de aplicaciones que tienen este propósito, espero que alguna les sirva&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;who&lt;/strong&gt;
El más simple, devuelve una lista de usuarios loggeados, y la tty donde están.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;w&lt;/strong&gt;
Similar a who, pero en este caso da un poco mas de información (no demasiada). Lista usuario, tty, tiempo loggeado, carga del sistema general y del usuario y que esta haciendo en ese momento. Un comando rápido, fácil y útil.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;whowatch&lt;/strong&gt;
Una aplicación bastante útil, crea un árbol con los usuarios loggeados, y
Con_ control + k_ mandamos un SIGKILL, con c switcheamos entre &amp;ldquo;comando/nombre de aplicacion&amp;rdquo;, la &lt;em&gt;o&lt;/em&gt; nos muestra el owner.
Pueden bajarla desde aca &lt;a href=&#34;http://wizard.ae.krakow.pl/~mike/&#34;&gt;http://wizard.ae.krakow.pl/~mike/&lt;/a&gt; aunque segurmente esté el los repositorios de la distro que usen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;last&lt;/strong&gt; y &lt;strong&gt;lastlog&lt;/strong&gt;
Muestra el ultimo acceso de los usuarios, el segundo es el mas simple y cómodo para leer, lista los usuarios, tty, desde donde y fecha y hora del acceso.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;psacct&lt;/strong&gt;
Este es un conjunto de aplicaciones, muy utiles (informacion detallada &lt;a href=&#34;http://generationip.com/documentation/system-documentation/113-howto-on-psacct-for-a-complete-monitoring-of-processus-and-users-activities-on-your-system&#34;&gt;aca&lt;/a&gt;), dentro de las cuales se encuentra:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;ac&lt;/em&gt;: Muestra informacion acerca de cuanto tiempo estuvo loggeado el usuario.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;lastcomm&lt;/em&gt;: Información sobre el ultimo comando ejecutado.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;sa&lt;/em&gt;: Informacion sumarizada con los datos del comando anterior.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;em&gt;last y lastb&lt;/em&gt;: Funciona muy similar al comando nombrado anteriormente, pero el segundo muestra tambien accesos fallidos.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Lentitud en la instalacion de paquetes con pacman</title>
      <link>/jesusroldan.com/posts/lentitud-en-la-instalacion-de-paquetes-con-pacman/</link>
      <pubDate>Tue, 06 Sep 2011 14:12:54 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/lentitud-en-la-instalacion-de-paquetes-con-pacman/</guid>
      <description>&lt;p&gt;Desde hace unos días noto que al actualizar o instalar nuevos paquetes con pacman o yaourt se toma una eternidad en actualizar.
En un primer momento pensé que era problema de la conexión, pero me pasaba en casa y en el laburo, con dos ISP diferentes, entonces el problema pasaba por otro lado.&lt;/p&gt;

&lt;p&gt;Buscando en el foro encontré a alguien que le pasaba algo similar, la solución surgió corriendo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; url=$(pacman -Sp linux | tee /dev/stderr) &amp;amp;&amp;amp; curl --verbose &amp;quot;${url}&amp;quot; -o /dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Se puede ver que trata de conectarse a mirror.kernel.org, que esta caído: &lt;a href=&#34;http://www.archlinux.org/mirrors/status/&#34;&gt;http://www.archlinux.org/mirrors/status/&lt;/a&gt;. Basta con editar el archivo /etc/pacman.d/mirrorlist&lt;/p&gt;

&lt;p&gt;Después deben correr pacman -Syy para actualizar los repositorios.&lt;/p&gt;

&lt;p&gt;En caso de que deseen ver los más rápidos, pueden seguir los pasos de la wiki, correr rankmirror la verdad que ayuda mucho en la velocidad &lt;a href=&#34;https://wiki.archlinux.org/index.php/Mirrors#List_by_speed&#34;&gt;https://wiki.archlinux.org/index.php/Mirrors#List_by_speed&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Alias para Todos</title>
      <link>/jesusroldan.com/posts/tips-para-linux-alias-para-todos/</link>
      <pubDate>Fri, 02 Sep 2011 21:33:09 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/tips-para-linux-alias-para-todos/</guid>
      <description>&lt;p&gt;Los alias en Linux son shortcuts o &lt;em&gt;sinónimos&lt;/em&gt; que podemos emplear para ejecutar comandos en la terminal.
Son muy útiles para correr comandos largos o simplemente crear nombres mas amigables, para algún comando que nos resulte deficil de recordar o a los que usemos mas seguido.
Para crearlos debemos escribir en el archivo &lt;strong&gt;~.bashrc&lt;/strong&gt; para dejarlos disponibles al usuario, o en /etc/bash.bashrc para dejarlos disponibles en todo el sistema.&lt;/p&gt;

&lt;p&gt;Las sintaxis es muy sencilla: &lt;em&gt;alias nombre=&amp;lsquo;comando&amp;rsquo;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Algunos ejemplos&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Gestión rapida de paquetería
alias instalar=&#39;sudo apt-get install&#39;
alias clearcache=&#39;yaourt -Scc&#39;
alias update=&#39;emerge --update --deep&#39;

#Vaciado de archivos
alias empty=&#39;:&amp;gt; $1&#39;

#Copiado con barra de progreso, velocidad y estadísticas
alias copy=&#39;rsync -avz --stats --progress&#39;

#Compartir la carpeta, via HTTP (http://127.0.0.1:8000)
alias sharehttp=&#39;python -m SimpleHTTPServer&#39;

#Mostrar unidades montadas, en columnas
alias mountt=&#39;mount | column -t&#39;

#Mostrar top 10 deprocesos que consuman mas memoria
alias pstop=&#39;ps aux | sort -nk +4 | tail&#39;

#Buscar proceso
alias psx=&#39;ps aux | grep &#39;

#Me olvide de poner sudo en el comando anterior
alias grrrrrrr=&#39;sudo !!&#39;

#Listar los puertos abiertos
alias openports=&#39;netstat --all --numeric --programs --inet&#39;

# Tambien podemos modificar el prompt o la terminal
# Agregandole la hora
alias hora=&#39;export PS1=&amp;quot;${PS1%\$*}&amp;quot;&#39; t $ &#39;
# o mejor aun, poniendola en la parte superior
alias horasuperior=&#39;while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done &amp;amp;&#39;

#Alias con parametros (en realidad es una funcion)
#Crear un directorio y posicionarnos sobre el mismo
MKdir() { mkdir $1 &amp;amp;&amp;amp; cd $1 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Hacer los comandos &amp;ldquo;human-readeable&amp;rdquo; por defecto&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias ls=&#39;ls -h&#39;
alias du=&#39;du -h&#39;
alias df=-df -h&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Simplificar los parámetros&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias ls=&#39;ls -hF --color=always&#39;
alias lr=&#39;ls -hR&#39;                    # recursive ls
alias ll=&#39;ls -hl&#39;
alias la=&#39;ll -hA&#39;
alias lx=&#39;ll -hBX&#39;                   # sort by extension
alias lz=&#39;ll -hrS&#39;                   # sort by size
alias lt=&#39;ll -rt&#39;                    # sort by date
alias lm=&#39;la | more&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;También podemos crear alias que solo funcionen para usuarios con privilegios de root&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;if [ $UID -ne 0 ]; then
    alias scat=&#39;sudo cat&#39;
    alias svim=&#39;sudo vim&#39;
    alias root=&#39;sudo su&#39;
    alias reboot=&#39;sudo reboot&#39;
    alias halt=&#39;sudo halt&#39;
    alias netcfg=&#39;sudo netcfg2&#39;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;!-- more --&gt;

&lt;p&gt;Si queren saber cuales son los comandos que más se utilizan en el sistema, como para ver si pueden agilizar creando alias mas cortos, pueden correr esto:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; history | awk &#39;{print $2}&#39; | awk &#39;BEGIN {FS=&amp;quot;|&amp;quot;}{print $1}&#39; | sort | uniq -c | sort -n | tail -n 20 | sort -nr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;[quote style=&amp;ldquo;1&amp;rdquo;] See, you not only have to be a good coder to create a system like Linux, you have to be a sneaky bastard too ;-) [/quote]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Linus Torvalds&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VirtualBoxes.org - Descarga de máquinas virtuales</title>
      <link>/jesusroldan.com/posts/virtualboxes-org-descarga-de-maquinas-virtuales/</link>
      <pubDate>Wed, 31 Aug 2011 20:43:42 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/virtualboxes-org-descarga-de-maquinas-virtuales/</guid>
      <description>&lt;p&gt;¿Les gusta probar diferentes Sistemas Operativos?
¿Te da &lt;del&gt;paja&lt;/del&gt; pereza instalarlos?
¿Virtualizas?
Entonces &lt;a href=&#34;http://virtualboxes.org/&#34;&gt;&lt;strong&gt;VirtualBoxes.org&lt;/strong&gt;&lt;/a&gt; es eso que no sabías que necesitabas. Al momento de escribir el texto, el sitio tiene 42 Sistemas Operativos diferentes, algunos con varias versiones del mismo.
El sitio se encarga de subir los archivos &lt;a href=&#34;http://filext.com/file-extension/VDI&#34;&gt;.vdi&lt;/a&gt; para importar en VirtualBox. Las descargas son directas, compresiones en 7zip hosteadas en Sourceforge.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Tiene imágenes de sistemas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;GNU/Linux&lt;/strong&gt;: Desde los más comunes como Fedora, Ubuntu o Debian hasta algunas menos populares como DeLi, gNewSense (la recomienda RMS), Moblin (orientada a netbooks) entre muchas otras.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Solaris&lt;/strong&gt;: OpenSolaris, MilaX, Nexenta&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;FreeBSD/BSD&lt;/strong&gt;: Debian GNU/kFreeBSD, FreeBSD&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;y algunos mas como MINIX, Haiku (basado en BeOS), ReactOS, Android, FreeDOS y algunos más&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;En donde están los links, tambien se encuentran los datos de login&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Borrar con &#39;Delete&#39; en Nautilus y Gnome3</title>
      <link>/jesusroldan.com/posts/borrar-con-delete-en-nautilus-con-gnome3/</link>
      <pubDate>Tue, 02 Aug 2011 15:13:02 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/borrar-con-delete-en-nautilus-con-gnome3/</guid>
      <description>&lt;p&gt;Titulo opcional: &lt;em&gt;Volvé Delete, no te fajo más&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Me es sumamente tedioso borrar archivos con Nautilus en Gnome3, porque por defecto utiliza Ctrl + Delete/Supr, pero por suerte se puede modificar facilmente&lt;/p&gt;

&lt;p&gt;Primero, hay que habilitar una opción en la configuración para permitir editar los shortcuts, se puede hacer desde gconf-editor o desde la terminal con gsettings&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gsettings set org.gnome.desktop.interface can-change-accels true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Después, desde Nautilus, seleccionen un archivo y vayan a menú. Con el cursor &lt;strong&gt;SOBRE&lt;/strong&gt; la acción que desean modificar presionen la/s tecla/s que quieran como nuevo shortcut. (y SOBRE quiere decir &amp;ldquo;No hagan click, madafackas&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;Cuando terminen deben volver la configuración original para evitar modificar accesos por error, solo cambian _true/false _ con gsettings&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips Linuxeros: Manejo del historial</title>
      <link>/jesusroldan.com/posts/tips-para-linux-manejo-del-historial/</link>
      <pubDate>Fri, 22 Jul 2011 00:16:16 +0000</pubDate>
      
      <guid>/jesusroldan.com/posts/tips-para-linux-manejo-del-historial/</guid>
      <description>&lt;p&gt;Quizás una de las mejores funcionalidades en la terminal de Linux, o por lo menos una de las más productivas, es la capacidad de generar un historial de lo que ejecutamos.
Ahora bien, existen varias formas de recorrerlo. La más común y la que seguramente todos usan, es mediante las flechas arriba y abajo, muy util, pero también existen otras formas de hacerlo :)&lt;/p&gt;

&lt;p&gt;Podemos hacer una búsqueda utilizando &lt;strong&gt;Ctrl+R&lt;/strong&gt; y el texto que deseamos. La búsqueda es incremental, en caso de que la primera opción no es la que queremos, sólo basta volver a presionar &lt;strong&gt;Ctrl+R&lt;/strong&gt;. Si queremos hacer la búsqueda en orden inverso, basta utilizar &lt;strong&gt;Ctrl+I&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Otra opción muy interesante es volver a ejecutar el comando anterior con &lt;strong&gt;!!&lt;/strong&gt; (doble signo de admiración). Es genial si nos olvidamos de ejecutar algo con permisos de superuser:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; sudo !!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;También se puede utilizar el &lt;strong&gt;!foo&lt;/strong&gt; para repetir la última vez que usamos foo, o &lt;strong&gt;!?foo&lt;/strong&gt; para volver a ejecutar el ultimo comando &lt;em&gt;que contenga&lt;/em&gt; foo.&lt;/p&gt;

&lt;p&gt;En caso de que querramos &lt;em&gt;reemplazar&lt;/em&gt; parte del script ejectutado anteriormente, por ejemplo, abrimos un archivo con nano pero ahora queremos abrirlo con vi, podemos correr&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;^nano^vi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;En caso de que necesitemos mostrar todos los comandos que contengan cierto termino basta con hacer un &lt;strong&gt;grep&lt;/strong&gt; de lo que devuelve el comando history:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; history | grep foo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;El número de la izquierda es el orden del comando, podemos correr esa linea usando &lt;strong&gt;!numero&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Un detalle&amp;hellip;&lt;/em&gt;
Es posible que si usan múltipes instancias de la terminal (desde tty, gnome-terminal, guake, yakuke, etc), no se guarde el historial, para esto  basta con editar el archivo &lt;strong&gt;~/.bashrc&lt;/strong&gt; de esta forma:
[sourcecode language=&amp;ldquo;bash&amp;rdquo;]
 unset HISTFILESIZE
 HISTSIZE=5000 # cantidad de registros que quieran guardar
 PROMPT_COMMAND=&amp;ldquo;history -a&amp;rdquo;
 export HISTSIZE PROMPT_COMMAND
[/sourcecode]&lt;/p&gt;

&lt;p&gt;Y correr una vez el siguiente comando&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; shopt -s histappend
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>